Component: Arm Compiler for Embedded 6.21 Tool: armlink [5ec1fa00]

==============================================================================

Section Cross References

    main.o(.text.SetupUart) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    main.o(.text.SetupUart) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    main.o(.text.SetupUart) refers to main.o(.bss.SysClock) for SysClock
    main.o(.text.SetupUart) refers to uart.o(i.UARTConfigSetExpClk) for UARTConfigSetExpClk
    main.o(.text.SetupUart) refers to uart.o(i.UARTFIFODisable) for UARTFIFODisable
    main.o(.text.SetupUart) refers to gpio.o(i.GPIOPinConfigure) for GPIOPinConfigure
    main.o(.text.SetupUart) refers to gpio.o(i.GPIOPinTypeUART) for GPIOPinTypeUART
    main.o(.ARM.exidx.text.SetupUart) refers to main.o(.text.SetupUart) for [Anonymous Symbol]
    main.o(.text.UARTIntHandler) refers to uart.o(i.UARTIntStatus) for UARTIntStatus
    main.o(.text.UARTIntHandler) refers to uart.o(i.UARTIntClear) for UARTIntClear
    main.o(.text.UARTIntHandler) refers to uart.o(i.UARTCharsAvail) for UARTCharsAvail
    main.o(.text.UARTIntHandler) refers to uart.o(i.UARTCharGet) for UARTCharGet
    main.o(.text.UARTIntHandler) refers to uart.o(i.UARTCharPut) for UARTCharPut
    main.o(.text.UARTIntHandler) refers to main.o(.bss.bufferIndex) for bufferIndex
    main.o(.text.UARTIntHandler) refers to main.o(.bss.inputBuffer) for inputBuffer
    main.o(.text.UARTIntHandler) refers to main.o(.bss.inputReady) for inputReady
    main.o(.ARM.exidx.text.UARTIntHandler) refers to main.o(.text.UARTIntHandler) for [Anonymous Symbol]
    main.o(.text.SetupTimer) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    main.o(.text.SetupTimer) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    main.o(.text.SetupTimer) refers to timer.o(i.TimerConfigure) for TimerConfigure
    main.o(.ARM.exidx.text.SetupTimer) refers to main.o(.text.SetupTimer) for [Anonymous Symbol]
    main.o(.text.start_us) refers to timer.o(i.TimerDisable) for TimerDisable
    main.o(.text.start_us) refers to timer.o(i.TimerLoadSet) for TimerLoadSet
    main.o(.text.start_us) refers to timer.o(i.TimerEnable) for TimerEnable
    main.o(.ARM.exidx.text.start_us) refers to main.o(.text.start_us) for [Anonymous Symbol]
    main.o(.text.stop_us) refers to timer.o(i.TimerDisable) for TimerDisable
    main.o(.text.stop_us) refers to timer.o(i.TimerValueGet) for TimerValueGet
    main.o(.text.stop_us) refers to main.o(.bss.SysClock) for SysClock
    main.o(.text.stop_us) refers to uldiv.o(.text) for __aeabi_uldivmod
    main.o(.ARM.exidx.text.stop_us) refers to main.o(.text.stop_us) for [Anonymous Symbol]
    main.o(.text.logMessage) refers to main.o(.bss.uartMutex) for uartMutex
    main.o(.text.logMessage) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    main.o(.text.logMessage) refers to printfa.o(i.__0vsnprintf) for vsnprintf
    main.o(.text.logMessage) refers to uart.o(i.UARTCharPut) for UARTCharPut
    main.o(.text.logMessage) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    main.o(.ARM.exidx.text.logMessage) refers to main.o(.text.logMessage) for [Anonymous Symbol]
    main.o(.text.prompt) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.prompt) refers to main.o(.text.logMessage) for logMessage
    main.o(.ARM.exidx.text.prompt) refers to main.o(.text.prompt) for [Anonymous Symbol]
    main.o(.text.printArray) refers to rtx_kernel.o(.text.osKernelGetTickCount) for osKernelGetTickCount
    main.o(.text.printArray) refers to main.o(.rodata.str1.1) for .L.str.1
    main.o(.text.printArray) refers to printfa.o(i.__0snprintf) for snprintf
    main.o(.text.printArray) refers to main.o(.text.logMessage) for logMessage
    main.o(.ARM.exidx.text.printArray) refers to main.o(.text.printArray) for [Anonymous Symbol]
    main.o(.text.printFinalSorted) refers to rtx_kernel.o(.text.osKernelGetTickCount) for osKernelGetTickCount
    main.o(.text.printFinalSorted) refers to main.o(.rodata.str1.1) for .L.str.5
    main.o(.text.printFinalSorted) refers to printfa.o(i.__0snprintf) for snprintf
    main.o(.text.printFinalSorted) refers to main.o(.text.logMessage) for logMessage
    main.o(.ARM.exidx.text.printFinalSorted) refers to main.o(.text.printFinalSorted) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.isSorted) refers to main.o(.text.isSorted) for [Anonymous Symbol]
    main.o(.text.bubbleSort) refers to main.o(.text.start_us) for start_us
    main.o(.text.bubbleSort) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(.text.bubbleSort) refers to main.o(.text.printArray) for printArray
    main.o(.text.bubbleSort) refers to main.o(.text.isSorted) for isSorted
    main.o(.text.bubbleSort) refers to main.o(.text.stop_us) for stop_us
    main.o(.text.bubbleSort) refers to main.o(.text.printFinalSorted) for printFinalSorted
    main.o(.ARM.exidx.text.bubbleSort) refers to main.o(.text.bubbleSort) for [Anonymous Symbol]
    main.o(.text.insertionSort) refers to main.o(.text.start_us) for start_us
    main.o(.text.insertionSort) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(.text.insertionSort) refers to main.o(.text.printArray) for printArray
    main.o(.text.insertionSort) refers to main.o(.text.isSorted) for isSorted
    main.o(.text.insertionSort) refers to main.o(.text.stop_us) for stop_us
    main.o(.text.insertionSort) refers to main.o(.text.printFinalSorted) for printFinalSorted
    main.o(.ARM.exidx.text.insertionSort) refers to main.o(.text.insertionSort) for [Anonymous Symbol]
    main.o(.text.quickSort) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(.text.quickSort) refers to main.o(.text.printArray) for printArray
    main.o(.text.quickSort) refers to main.o(.text.isSorted) for isSorted
    main.o(.text.quickSort) refers to main.o(.text.stop_us) for stop_us
    main.o(.text.quickSort) refers to main.o(.text.printFinalSorted) for printFinalSorted
    main.o(.ARM.exidx.text.quickSort) refers to main.o(.text.quickSort) for [Anonymous Symbol]
    main.o(.text.Thread_Sort) refers to main.o(.rodata.str1.1) for .L.str.7
    main.o(.text.Thread_Sort) refers to main.o(.bss.queueBubble) for queueBubble
    main.o(.text.Thread_Sort) refers to main.o(.data.bubbleDone) for bubbleDone
    main.o(.text.Thread_Sort) refers to main.o(.bss.queueInsert) for queueInsert
    main.o(.text.Thread_Sort) refers to main.o(.data.insertionDone) for insertionDone
    main.o(.text.Thread_Sort) refers to main.o(.bss.queueQuick) for queueQuick
    main.o(.text.Thread_Sort) refers to main.o(.data.quickDone) for quickDone
    main.o(.text.Thread_Sort) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    main.o(.text.Thread_Sort) refers to main.o(.text.bubbleSort) for bubbleSort
    main.o(.text.Thread_Sort) refers to main.o(.text.insertionSort) for insertionSort
    main.o(.text.Thread_Sort) refers to main.o(.text.start_us) for start_us
    main.o(.text.Thread_Sort) refers to main.o(.text.quickSort) for quickSort
    main.o(.text.Thread_Sort) refers to main.o(.text.stop_us) for stop_us
    main.o(.text.Thread_Sort) refers to main.o(.text.printFinalSorted) for printFinalSorted
    main.o(.ARM.exidx.text.Thread_Sort) refers to main.o(.text.Thread_Sort) for [Anonymous Symbol]
    main.o(.text.Thread_Input) refers to main.o(.bss.inputBuffer) for inputBuffer
    main.o(.text.Thread_Input) refers to memseta.o(.text) for __aeabi_memclr
    main.o(.text.Thread_Input) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(.text.Thread_Input) refers to main.o(.data.bubbleDone) for bubbleDone
    main.o(.text.Thread_Input) refers to main.o(.data.insertionDone) for insertionDone
    main.o(.text.Thread_Input) refers to main.o(.data.quickDone) for quickDone
    main.o(.text.Thread_Input) refers to main.o(.text.prompt) for prompt
    main.o(.text.Thread_Input) refers to main.o(.bss.bufferIndex) for bufferIndex
    main.o(.text.Thread_Input) refers to main.o(.bss.inputReady) for inputReady
    main.o(.text.Thread_Input) refers to strtoul.o(.text) for strtoul
    main.o(.text.Thread_Input) refers to main.o(.rodata.str1.1) for .L.str.9
    main.o(.text.Thread_Input) refers to main.o(.text.logMessage) for logMessage
    main.o(.text.Thread_Input) refers to rand.o(.text) for rand
    main.o(.text.Thread_Input) refers to main.o(.bss.queueBubble) for queueBubble
    main.o(.text.Thread_Input) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(.text.Thread_Input) refers to main.o(.bss.queueInsert) for queueInsert
    main.o(.text.Thread_Input) refers to main.o(.bss.queueQuick) for queueQuick
    main.o(.ARM.exidx.text.Thread_Input) refers to main.o(.text.Thread_Input) for [Anonymous Symbol]
    main.o(.text.main) refers to sysctl.o(i.SysCtlClockFreqSet) for SysCtlClockFreqSet
    main.o(.text.main) refers to main.o(.bss.SysClock) for SysClock
    main.o(.text.main) refers to main.o(.text.SetupUart) for SetupUart
    main.o(.text.main) refers to main.o(.text.SetupTimer) for SetupTimer
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text.main) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    main.o(.text.main) refers to main.o(.bss.queueBubble) for queueBubble
    main.o(.text.main) refers to main.o(.bss.queueInsert) for queueInsert
    main.o(.text.main) refers to main.o(.bss.queueQuick) for queueQuick
    main.o(.text.main) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    main.o(.text.main) refers to main.o(.bss.uartMutex) for uartMutex
    main.o(.text.main) refers to memseta.o(.text) for __aeabi_memclr4
    main.o(.text.main) refers to main.o(.text.Thread_Sort) for Thread_Sort
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str.7
    main.o(.text.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(.text.main) refers to main.o(.text.Thread_Input) for Thread_Input
    main.o(.text.main) refers to main.o(.text.UARTIntHandler) for UARTIntHandler
    main.o(.text.main) refers to uart.o(i.UARTIntRegister) for UARTIntRegister
    main.o(.text.main) refers to uart.o(i.UARTIntEnable) for UARTIntEnable
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv7m.o(.rodata) for irqRtxLib
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderTimerGetFreq) refers to system_tm4c129.o(.data.SystemCoreClock) for SystemCoreClock
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderInitialize) refers to memseta.o(.text) for __aeabi_memclr4
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.rodata.EventRecorderInfo) for EventRecorderInfo
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.crc16_ccitt) for crc16_ccitt
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for EventRecorderTimerSetup
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderEnable) for EventRecorderEnable
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderStart) for EventRecorderStart
    eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderInitialize) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.crc16_ccitt) refers to eventrecorder.o(.text.crc16_ccitt) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderEnable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(.ARM.exidx.text.EventRecorderEnable) refers to eventrecorder.o(.text.EventRecorderEnable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.LockTS_Overflow) for LockTS_Overflow
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.UnlockTS_Overflow) for UnlockTS_Overflow
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.UpdateTS) for UpdateTS
    eventrecorder.o(.ARM.exidx.text.EventGetTS) refers to eventrecorder.o(.text.EventGetTS) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.GetRecordIndex) for GetRecordIndex
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.bss.noinit) for EventBuffer
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.LockRecord) for LockRecord
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.UnlockRecord) for UnlockRecord
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.IncrementRecordsWritten) for IncrementRecordsWritten
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.IncrementRecordsDumped) for IncrementRecordsDumped
    eventrecorder.o(.ARM.exidx.text.EventRecordItem) refers to eventrecorder.o(.text.EventRecordItem) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecorderStart) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderDisable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(.ARM.exidx.text.EventRecorderDisable) refers to eventrecorder.o(.text.EventRecorderDisable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecorderStop) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderClockUpdate) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecordData) refers to memcpya.o(.text) for __aeabi_memcpy
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.GetContext) for GetContext
    eventrecorder.o(.ARM.exidx.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordData) for [Anonymous Symbol]
    eventrecorder.o(.text.EventCheckFilter) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.ARM.exidx.text.EventCheckFilter) refers to eventrecorder.o(.text.EventCheckFilter) for [Anonymous Symbol]
    eventrecorder.o(.text.GetContext) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.GetContext) refers to eventrecorder.o(.text.atomic_inc8) for atomic_inc8
    eventrecorder.o(.ARM.exidx.text.GetContext) refers to eventrecorder.o(.text.GetContext) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecord2) refers to eventrecorder.o(.text.EventRecord2) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.GetContext) for GetContext
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecord4) refers to eventrecorder.o(.text.EventRecord4) for [Anonymous Symbol]
    eventrecorder.o(.text.LockTS_Overflow) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.LockTS_Overflow) refers to eventrecorder.o(.text.atomic_wr8) for atomic_wr8
    eventrecorder.o(.ARM.exidx.text.LockTS_Overflow) refers to eventrecorder.o(.text.LockTS_Overflow) for [Anonymous Symbol]
    eventrecorder.o(.text.UnlockTS_Overflow) refers to eventrecorder.o(.bss.TS_OverflowLock) for TS_OverflowLock
    eventrecorder.o(.text.UnlockTS_Overflow) refers to eventrecorder.o(.text.atomic_wr8) for atomic_wr8
    eventrecorder.o(.ARM.exidx.text.UnlockTS_Overflow) refers to eventrecorder.o(.text.UnlockTS_Overflow) for [Anonymous Symbol]
    eventrecorder.o(.text.UpdateTS) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.UpdateTS) refers to eventrecorder.o(.text.atomic_wr32) for atomic_wr32
    eventrecorder.o(.ARM.exidx.text.UpdateTS) refers to eventrecorder.o(.text.UpdateTS) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_wr8) refers to eventrecorder.o(.text.atomic_wr8) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_wr32) refers to eventrecorder.o(.text.atomic_wr32) for [Anonymous Symbol]
    eventrecorder.o(.text.GetRecordIndex) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.GetRecordIndex) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.ARM.exidx.text.GetRecordIndex) refers to eventrecorder.o(.text.GetRecordIndex) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.LockRecord) refers to eventrecorder.o(.text.LockRecord) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.UnlockRecord) refers to eventrecorder.o(.text.UnlockRecord) for [Anonymous Symbol]
    eventrecorder.o(.text.IncrementRecordsWritten) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.IncrementRecordsWritten) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.ARM.exidx.text.IncrementRecordsWritten) refers to eventrecorder.o(.text.IncrementRecordsWritten) for [Anonymous Symbol]
    eventrecorder.o(.text.IncrementRecordsDumped) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.IncrementRecordsDumped) refers to eventrecorder.o(.text.atomic_inc32) for atomic_inc32
    eventrecorder.o(.ARM.exidx.text.IncrementRecordsDumped) refers to eventrecorder.o(.text.IncrementRecordsDumped) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_inc32) refers to eventrecorder.o(.text.atomic_inc32) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_inc8) refers to eventrecorder.o(.text.atomic_inc8) for [Anonymous Symbol]
    eventrecorder.o(.rodata.EventRecorderInfo) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    startup_tm4c129.o(RESET) refers to startup_tm4c129.o(STACK) for __initial_sp
    startup_tm4c129.o(RESET) refers to startup_tm4c129.o(.text) for Reset_Handler
    startup_tm4c129.o(RESET) refers to irq_armv7m.o(.text) for SVC_Handler
    startup_tm4c129.o(.text) refers to system_tm4c129.o(.text.SystemInit) for SystemInit
    startup_tm4c129.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_tm4c129.o(.text.SystemCoreClockUpdate) refers to system_tm4c129.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c129.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c129.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c129.o(.text.SystemInit) refers to system_tm4c129.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c129.o(.ARM.exidx.text.SystemInit) refers to system_tm4c129.o(.text.SystemInit) for [Anonymous Symbol]
    gpio.o(i.GPIOIntRegister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntRegisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntUnregister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOIntUnregisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOPinConfigure) refers to gpio.o(.constdata) for .constdata
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i._GPIOIntNumberGet) refers to gpio.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockFreqSet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockGet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockSet) refers to sysctl.o(.emb_text) for SysCtlDelay
    sysctl.o(i.SysCtlDeepSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    sysctl.o(i.SysCtlSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlVCOGet) refers to sysctl.o(.constdata) for .constdata
    timer.o(i.TimerIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    timer.o(i.TimerIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    timer.o(i.TimerIntRegister) refers to timer.o(.constdata) for .constdata
    timer.o(i.TimerIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    timer.o(i.TimerIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    timer.o(i.TimerIntUnregister) refers to timer.o(.constdata) for .constdata
    uart.o(i.UARTIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    uart.o(i.UARTIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    uart.o(i.UARTIntRegister) refers to uart.o(.constdata) for .constdata
    uart.o(i.UARTIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    uart.o(i.UARTIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    uart.o(i.UARTIntUnregister) refers to uart.o(.constdata) for .constdata
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv7m.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.OUTLINED_FUNCTION_0) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_thread.o(.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv7m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv7m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv7m.o(.ARM.exidx) refers to irq_armv7m.o(.text) for [Anonymous Symbol]
    interrupt.o(i.IntDisable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntEnable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntIsEnabled) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntMasterDisable) refers to cpu.o(.emb_text) for CPUcpsid
    interrupt.o(i.IntMasterEnable) refers to cpu.o(.emb_text) for CPUcpsie
    interrupt.o(i.IntPendClear) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPendSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityMaskGet) refers to cpu.o(.emb_text) for CPUbasepriGet
    interrupt.o(i.IntPriorityMaskSet) refers to cpu.o(.emb_text) for CPUbasepriSet
    interrupt.o(i.IntPrioritySet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntRegister) refers to interrupt.o(vtable) for vtable
    interrupt.o(i.IntUnregister) refers to interrupt.o(i._IntDefaultHandler) for _IntDefaultHandler
    interrupt.o(i.IntUnregister) refers to interrupt.o(vtable) for vtable
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_tm4c129.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_tm4c129.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    rand.o(.text) refers to rand.o(.data) for .data
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    strtoul.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    strtoul.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    strtoul.o(.text) refers to _strtoul.o(.text) for _strtoul
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_tm4c129.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_tm4c129.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    fputc.o(i.fputc) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc.o(i.fputc) refers (Special) to semi.o(.text) for __semihosting_library_function
    fputc_h.o(i._fputc$hlt) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc_h.o(i._fputc$hlt) refers (Special) to semi.o(.text) for __semihosting_library_function
    ctype_o.o(.text) refers to ctype_o.o(.constdata) for .constdata
    ctype_o.o(.constdata) refers to ctype_o.o(.constdata) for __ctype_table
    isalnum_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isalpha_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isblank_o.o(.text) refers to ctype_o.o(.constdata) for __ctype_table
    iscntrl_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isgraph_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    islower_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isprint_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    ispunct_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isspace_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isupper_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isxdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    errno.o(i.__aeabi_errno_addr) refers to errno.o(.data) for .data
    errno.o(i.__read_errno) refers to errno.o(.data) for .data
    errno.o(i.__set_errno) refers to errno.o(.data) for .data
    _strtoul.o(.text) refers to _chval.o(.text) for _chval
    _strtoul.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.SetupUart), (8 bytes).
    Removing main.o(.ARM.exidx.text.UARTIntHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.SetupTimer), (8 bytes).
    Removing main.o(.ARM.exidx.text.start_us), (8 bytes).
    Removing main.o(.ARM.exidx.text.stop_us), (8 bytes).
    Removing main.o(.ARM.exidx.text.logMessage), (8 bytes).
    Removing main.o(.ARM.exidx.text.prompt), (8 bytes).
    Removing main.o(.ARM.exidx.text.printArray), (8 bytes).
    Removing main.o(.ARM.exidx.text.printFinalSorted), (8 bytes).
    Removing main.o(.ARM.exidx.text.isSorted), (8 bytes).
    Removing main.o(.ARM.exidx.text.bubbleSort), (8 bytes).
    Removing main.o(.ARM.exidx.text.insertionSort), (8 bytes).
    Removing main.o(.ARM.exidx.text.quickSort), (8 bytes).
    Removing main.o(.ARM.exidx.text.Thread_Sort), (8 bytes).
    Removing main.o(.ARM.exidx.text.Thread_Input), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing eventrecorder.o(.text), (0 bytes).
    Removing eventrecorder.o(.text.EventRecorderTimerSetup), (36 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderTimerGetFreq), (12 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderTimerGetCount), (12 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderInitialize), (450 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize), (8 bytes).
    Removing eventrecorder.o(.text.crc16_ccitt), (130 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.crc16_ccitt), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderEnable), (146 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderEnable), (8 bytes).
    Removing eventrecorder.o(.text.EventGetTS), (90 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventGetTS), (8 bytes).
    Removing eventrecorder.o(.text.EventRecordItem), (254 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordItem), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderStart), (74 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStart), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderDisable), (146 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderDisable), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderStop), (74 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStop), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderClockUpdate), (54 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate), (8 bytes).
    Removing eventrecorder.o(.text.EventRecordData), (388 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordData), (8 bytes).
    Removing eventrecorder.o(.text.EventCheckFilter), (60 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventCheckFilter), (8 bytes).
    Removing eventrecorder.o(.text.GetContext), (18 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.GetContext), (8 bytes).
    Removing eventrecorder.o(.text.EventRecord2), (90 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord2), (8 bytes).
    Removing eventrecorder.o(.text.EventRecord4), (150 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord4), (8 bytes).
    Removing eventrecorder.o(.text.LockTS_Overflow), (18 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.LockTS_Overflow), (8 bytes).
    Removing eventrecorder.o(.text.UnlockTS_Overflow), (18 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UnlockTS_Overflow), (8 bytes).
    Removing eventrecorder.o(.text.UpdateTS), (26 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UpdateTS), (8 bytes).
    Removing eventrecorder.o(.text.atomic_wr8), (40 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_wr8), (8 bytes).
    Removing eventrecorder.o(.text.atomic_wr32), (32 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_wr32), (8 bytes).
    Removing eventrecorder.o(.text.GetRecordIndex), (18 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.GetRecordIndex), (8 bytes).
    Removing eventrecorder.o(.text.LockRecord), (54 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.LockRecord), (8 bytes).
    Removing eventrecorder.o(.text.UnlockRecord), (50 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UnlockRecord), (8 bytes).
    Removing eventrecorder.o(.text.IncrementRecordsWritten), (18 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.IncrementRecordsWritten), (8 bytes).
    Removing eventrecorder.o(.text.IncrementRecordsDumped), (18 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.IncrementRecordsDumped), (8 bytes).
    Removing eventrecorder.o(.text.atomic_inc32), (32 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing eventrecorder.o(.text.atomic_inc8), (36 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_inc8), (8 bytes).
    Removing eventrecorder.o(.bss.TS_OverflowLock), (1 bytes).
    Removing startup_tm4c129.o(HEAP), (0 bytes).
    Removing system_tm4c129.o(.text), (0 bytes).
    Removing system_tm4c129.o(.text.SystemCoreClockUpdate), (20 bytes).
    Removing system_tm4c129.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c129.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing gpio.o(i.GPIOADCTriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIOADCTriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODMATriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIODMATriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODirModeGet), (34 bytes).
    Removing gpio.o(i.GPIOIntClear), (6 bytes).
    Removing gpio.o(i.GPIOIntDisable), (14 bytes).
    Removing gpio.o(i.GPIOIntEnable), (12 bytes).
    Removing gpio.o(i.GPIOIntRegister), (26 bytes).
    Removing gpio.o(i.GPIOIntRegisterPin), (30 bytes).
    Removing gpio.o(i.GPIOIntStatus), (14 bytes).
    Removing gpio.o(i.GPIOIntTypeGet), (70 bytes).
    Removing gpio.o(i.GPIOIntTypeSet), (80 bytes).
    Removing gpio.o(i.GPIOIntUnregister), (22 bytes).
    Removing gpio.o(i.GPIOIntUnregisterPin), (26 bytes).
    Removing gpio.o(i.GPIOPadConfigGet), (248 bytes).
    Removing gpio.o(i.GPIOPinRead), (6 bytes).
    Removing gpio.o(i.GPIOPinTypeADC), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeCAN), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparator), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparatorOutput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeDIVSCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEPI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetLED), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetMII), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOInput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOOutput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOOutputOD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeHibernateRTCCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2C), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2CSCL), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeLCD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeOneWire), (28 bytes).
    Removing gpio.o(i.GPIOPinTypePWM), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeQEI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeSSI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTimer), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTrace), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBAnalog), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBDigital), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeHigh), (30 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeLow), (30 bytes).
    Removing gpio.o(i.GPIOPinWakeStatus), (6 bytes).
    Removing gpio.o(i.GPIOPinWrite), (6 bytes).
    Removing gpio.o(i.GPIOUnlockPin), (24 bytes).
    Removing gpio.o(i._GPIOIntNumberGet), (80 bytes).
    Removing sysctl.o(.emb_text), (6 bytes).
    Removing sysctl.o(i.SysCtlAltClkConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlClockGet), (340 bytes).
    Removing sysctl.o(i.SysCtlClockOutConfig), (20 bytes).
    Removing sysctl.o(i.SysCtlClockSet), (288 bytes).
    Removing sysctl.o(i.SysCtlDeepSleep), (32 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockConfigSet), (112 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockSet), (12 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlFlashSectorSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlFlashSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBDisable), (28 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBEnable), (24 bytes).
    Removing sysctl.o(i.SysCtlIntClear), (12 bytes).
    Removing sysctl.o(i.SysCtlIntDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntRegister), (20 bytes).
    Removing sysctl.o(i.SysCtlIntStatus), (16 bytes).
    Removing sysctl.o(i.SysCtlIntUnregister), (18 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlMOSCConfigSet), (12 bytes).
    Removing sysctl.o(i.SysCtlNMIClear), (16 bytes).
    Removing sysctl.o(i.SysCtlNMIStatus), (12 bytes).
    Removing sysctl.o(i.SysCtlPIOSCCalibrate), (76 bytes).
    Removing sysctl.o(i.SysCtlPWMClockGet), (24 bytes).
    Removing sysctl.o(i.SysCtlPWMClockSet), (20 bytes).
    Removing sysctl.o(i.SysCtlPeripheralClockGating), (68 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOff), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOn), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPresent), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReset), (60 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlReset), (16 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorGet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorSet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetCauseClear), (16 bytes).
    Removing sysctl.o(i.SysCtlResetCauseGet), (12 bytes).
    Removing sysctl.o(i.SysCtlSRAMSizeGet), (16 bytes).
    Removing sysctl.o(i.SysCtlSleep), (4 bytes).
    Removing sysctl.o(i.SysCtlSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlVCOGet), (120 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventClear), (16 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventStatus), (12 bytes).
    Removing timer.o(i.TimerADCEventGet), (4 bytes).
    Removing timer.o(i.TimerADCEventSet), (4 bytes).
    Removing timer.o(i.TimerClockSourceGet), (6 bytes).
    Removing timer.o(i.TimerClockSourceSet), (6 bytes).
    Removing timer.o(i.TimerControlEvent), (18 bytes).
    Removing timer.o(i.TimerControlLevel), (22 bytes).
    Removing timer.o(i.TimerControlStall), (22 bytes).
    Removing timer.o(i.TimerControlTrigger), (80 bytes).
    Removing timer.o(i.TimerControlWaitOnTrigger), (48 bytes).
    Removing timer.o(i.TimerDMAEventGet), (4 bytes).
    Removing timer.o(i.TimerDMAEventSet), (4 bytes).
    Removing timer.o(i.TimerIntClear), (4 bytes).
    Removing timer.o(i.TimerIntDisable), (10 bytes).
    Removing timer.o(i.TimerIntEnable), (8 bytes).
    Removing timer.o(i.TimerIntRegister), (104 bytes).
    Removing timer.o(i.TimerIntStatus), (10 bytes).
    Removing timer.o(i.TimerIntUnregister), (104 bytes).
    Removing timer.o(i.TimerLoadGet), (10 bytes).
    Removing timer.o(i.TimerLoadGet64), (14 bytes).
    Removing timer.o(i.TimerLoadSet64), (6 bytes).
    Removing timer.o(i.TimerMatchGet), (10 bytes).
    Removing timer.o(i.TimerMatchGet64), (14 bytes).
    Removing timer.o(i.TimerMatchSet), (18 bytes).
    Removing timer.o(i.TimerMatchSet64), (6 bytes).
    Removing timer.o(i.TimerPrescaleGet), (10 bytes).
    Removing timer.o(i.TimerPrescaleMatchGet), (10 bytes).
    Removing timer.o(i.TimerPrescaleMatchSet), (18 bytes).
    Removing timer.o(i.TimerPrescaleSet), (18 bytes).
    Removing timer.o(i.TimerRTCDisable), (10 bytes).
    Removing timer.o(i.TimerRTCEnable), (10 bytes).
    Removing timer.o(i.TimerSynchronize), (4 bytes).
    Removing timer.o(i.TimerUpdateMode), (42 bytes).
    Removing timer.o(i.TimerValueGet64), (14 bytes).
    Removing timer.o(.constdata), (160 bytes).
    Removing uart.o(i.UART9BitAddrSend), (38 bytes).
    Removing uart.o(i.UART9BitAddrSet), (10 bytes).
    Removing uart.o(i.UART9BitDisable), (14 bytes).
    Removing uart.o(i.UART9BitEnable), (14 bytes).
    Removing uart.o(i.UARTBreakCtl), (18 bytes).
    Removing uart.o(i.UARTBusy), (8 bytes).
    Removing uart.o(i.UARTCharGetNonBlocking), (16 bytes).
    Removing uart.o(i.UARTCharPutNonBlocking), (16 bytes).
    Removing uart.o(i.UARTClockSourceGet), (6 bytes).
    Removing uart.o(i.UARTClockSourceSet), (6 bytes).
    Removing uart.o(i.UARTConfigGetExpClk), (46 bytes).
    Removing uart.o(i.UARTDMADisable), (10 bytes).
    Removing uart.o(i.UARTDMAEnable), (8 bytes).
    Removing uart.o(i.UARTDisable), (30 bytes).
    Removing uart.o(i.UARTDisableSIR), (10 bytes).
    Removing uart.o(i.UARTEnable), (20 bytes).
    Removing uart.o(i.UARTEnableSIR), (18 bytes).
    Removing uart.o(i.UARTFIFOEnable), (10 bytes).
    Removing uart.o(i.UARTFIFOLevelGet), (16 bytes).
    Removing uart.o(i.UARTFIFOLevelSet), (6 bytes).
    Removing uart.o(i.UARTFlowControlGet), (8 bytes).
    Removing uart.o(i.UARTFlowControlSet), (12 bytes).
    Removing uart.o(i.UARTIntDisable), (10 bytes).
    Removing uart.o(i.UARTIntUnregister), (88 bytes).
    Removing uart.o(i.UARTLoopbackEnable), (10 bytes).
    Removing uart.o(i.UARTModemControlClear), (14 bytes).
    Removing uart.o(i.UARTModemControlGet), (8 bytes).
    Removing uart.o(i.UARTModemControlSet), (12 bytes).
    Removing uart.o(i.UARTModemStatusGet), (10 bytes).
    Removing uart.o(i.UARTParityModeGet), (8 bytes).
    Removing uart.o(i.UARTParityModeSet), (12 bytes).
    Removing uart.o(i.UARTRxErrorClear), (6 bytes).
    Removing uart.o(i.UARTRxErrorGet), (8 bytes).
    Removing uart.o(i.UARTSmartCardDisable), (10 bytes).
    Removing uart.o(i.UARTSmartCardEnable), (22 bytes).
    Removing uart.o(i.UARTSpaceAvail), (10 bytes).
    Removing uart.o(i.UARTTxIntModeGet), (8 bytes).
    Removing uart.o(i.UARTTxIntModeSet), (12 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetState), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetState), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (64 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (124 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (116 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (136 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (102 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_0), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_1), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_2), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_4), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (120 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (16 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexDelete), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (16 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexDelete), (176 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (166 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (108 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing irq_armv7m.o(.rodata), (1 bytes).
    Removing irq_armv7m.o(.ARM.exidx), (24 bytes).
    Removing cpu.o(.emb_text), (38 bytes).
    Removing interrupt.o(i.IntDisable), (100 bytes).
    Removing interrupt.o(i.IntIsEnabled), (96 bytes).
    Removing interrupt.o(i.IntMasterDisable), (14 bytes).
    Removing interrupt.o(i.IntMasterEnable), (14 bytes).
    Removing interrupt.o(i.IntPendClear), (68 bytes).
    Removing interrupt.o(i.IntPendSet), (84 bytes).
    Removing interrupt.o(i.IntPriorityGet), (28 bytes).
    Removing interrupt.o(i.IntPriorityGroupingGet), (36 bytes).
    Removing interrupt.o(i.IntPriorityGroupingSet), (28 bytes).
    Removing interrupt.o(i.IntPriorityMaskGet), (4 bytes).
    Removing interrupt.o(i.IntPriorityMaskSet), (4 bytes).
    Removing interrupt.o(i.IntPrioritySet), (40 bytes).
    Removing interrupt.o(i.IntTrigger), (12 bytes).
    Removing interrupt.o(i.IntUnregister), (20 bytes).
    Removing interrupt.o(i._IntDefaultHandler), (2 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (312 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (92 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (108 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (44 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).

609 unused section(s) (total 15820 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl.c           0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ctype_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalnum_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalpha_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isblank_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  iscntrl_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isdigit_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isgraph_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  islower_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isprint_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ispunct_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isspace_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isupper_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isxdigit_o.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/errno.c                 0x00000000   Number         0  errno.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc_h.o ABSOLUTE
    ../clib/microlib/stdio/semi.s            0x00000000   Number         0  semi.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/stdlib/rand.c           0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusesemip.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _chval.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    EventRecorder.c                          0x00000000   Number         0  eventrecorder.o ABSOLUTE
    RTE/Device/TM4C1294NCPDT/startup_TM4C129.s 0x00000000   Number         0  startup_tm4c129.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    system_TM4C129.c                         0x00000000   Number         0  system_tm4c129.o ABSOLUTE
    timer.c                                  0x00000000   Number         0  timer.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    RESET                                    0x00000000   Section      512  startup_tm4c129.o(RESET)
    FPU_USED                                 0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv7m.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x00000200   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x00000200   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x00000204   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000208   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000208   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000208   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x00000210   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x00000210   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x00000210   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x00000210   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    $v0                                      0x00000214   Number         0  startup_tm4c129.o(.text)
    .text                                    0x00000214   Section      276  startup_tm4c129.o(.text)
    [Anonymous Symbol]                       0x00000328   Section        0  irq_armv7m.o(.text)
    SVC_Context                              0x00000350   Number         0  irq_armv7m.o(.text)
    SVC_FP_LazyState                         0x00000360   Number         0  irq_armv7m.o(.text)
    SVC_ContextSave                          0x00000372   Number         0  irq_armv7m.o(.text)
    SVC_ContextRestore                       0x00000388   Number         0  irq_armv7m.o(.text)
    SVC_Exit                                 0x000003a4   Number         0  irq_armv7m.o(.text)
    SVC_User                                 0x000003a6   Number         0  irq_armv7m.o(.text)
    .text                                    0x000003f0   Section        0  uldiv.o(.text)
    .text                                    0x00000454   Section        0  rand.o(.text)
    .text                                    0x00000478   Section        0  memcpya.o(.text)
    .text                                    0x0000049c   Section        0  memseta.o(.text)
    .text                                    0x000004c0   Section        0  strtoul.o(.text)
    .text                                    0x00000532   Section        0  uidiv.o(.text)
    .text                                    0x0000055e   Section        0  llshl.o(.text)
    .text                                    0x0000057c   Section        0  llushr.o(.text)
    .text                                    0x0000059c   Section        0  ctype_o.o(.text)
    .text                                    0x000005a4   Section        0  _strtoul.o(.text)
    .text                                    0x00000642   Section        0  iusefp.o(.text)
    .text                                    0x00000642   Section        0  dadd.o(.text)
    .text                                    0x00000790   Section        0  dmul.o(.text)
    .text                                    0x00000874   Section        0  ddiv.o(.text)
    .text                                    0x00000952   Section        0  dfixul.o(.text)
    .text                                    0x00000984   Section       48  cdrcmple.o(.text)
    .text                                    0x000009b4   Section       48  init.o(.text)
    .text                                    0x000009e4   Section        0  llsshr.o(.text)
    .text                                    0x00000a08   Section        0  _chval.o(.text)
    .text                                    0x00000a24   Section        0  depilogue.o(.text)
    .text                                    0x00000ade   Section        0  __dczerorl.o(.text)
    MessageQueueGet                          0x00000b19   Thumb Code    64  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x00000b18   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x00000b59   Thumb Code    88  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x00000b58   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x00000bb1   Thumb Code    28  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x00000bb0   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x00000bcc   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x00000bd4   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x00000bf4   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x00000bf8   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x00000c00   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x00000c30   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x00000c34   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x00000c38   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x00000c3c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    OUTLINED_FUNCTION_0                      0x00000c41   Thumb Code    12  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x00000c40   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x00000c4d   Thumb Code    12  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x00000c4c   Section        0  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_1                      0x00000c59   Thumb Code     6  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x00000c58   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    OUTLINED_FUNCTION_1                      0x00000c5f   Thumb Code     6  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x00000c5e   Section        0  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x00000c64   Section        0  main.o(.text.SetupTimer)
    [Anonymous Symbol]                       0x00000c94   Section        0  main.o(.text.SetupUart)
    [Anonymous Symbol]                       0x00000d18   Section        0  system_tm4c129.o(.text.SystemInit)
    ThreadFlagsCheck                         0x00000d3d   Thumb Code   100  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x00000d3c   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x00000da0   Section        0  main.o(.text.Thread_Input)
    [Anonymous Symbol]                       0x00000f58   Section        0  main.o(.text.Thread_Sort)
    TimerInsert                              0x00001081   Thumb Code    68  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x00001080   Section        0  rtx_timer.o(.text.TimerInsert)
    __arm_cp.9_0                             0x000010c4   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x000010c8   Section        0  main.o(.text.UARTIntHandler)
    [Anonymous Symbol]                       0x0000118c   Section        0  main.o(.text.bubbleSort)
    [Anonymous Symbol]                       0x00001268   Section        0  main.o(.text.insertionSort)
    [Anonymous Symbol]                       0x0000134c   Section        0  main.o(.text.isSorted)
    [Anonymous Symbol]                       0x0000139c   Section        0  main.o(.text.logMessage)
    [Anonymous Symbol]                       0x00001410   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x0000154c   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x0000156c   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x00001570   Section        0  rtx_kernel.o(.text.osKernelGetTickCount)
    __arm_cp.13_0                            0x00001590   Number         4  rtx_kernel.o(.text.osKernelGetTickCount)
    __arm_cp.13_1                            0x00001594   Number         4  rtx_kernel.o(.text.osKernelGetTickCount)
    [Anonymous Symbol]                       0x00001598   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.2_0                             0x000015c0   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x000015c4   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.7_0                             0x000015e4   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x000015e8   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.5_0                             0x00001654   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x00001658   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.2_0                             0x00001678   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x0000167c   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.4_0                             0x000016f8   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x000016fc   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.4_0                             0x0000171c   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x00001720   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.2_0                             0x00001740   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x00001744   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.5_0                             0x00001764   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x00001768   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    [Anonymous Symbol]                       0x00001798   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x000017a0   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x000017a4   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x000017a6   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x00001812   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x00001854   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x0000188a   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x000018c4   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x0000190e   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x00001947   Thumb Code   170  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x00001946   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x000019f0   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    __arm_cp.0_0                             0x00001a10   Number         4  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    [Anonymous Symbol]                       0x00001a14   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x00001a5c   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    [Anonymous Symbol]                       0x00001aa4   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x00001b2c   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x00001b98   Number         4  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadBlock                         0x00001b9d   Thumb Code    52  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x00001b9c   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x00001bd1   Thumb Code   124  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x00001bd0   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayRemove                   0x00001c4d   Thumb Code    60  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x00001c4c   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x00001c88   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDestroy                       0x00001cd9   Thumb Code    32  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x00001cd8   Section        0  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x00001cf8   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x00001d49   Thumb Code    84  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x00001d48   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.51_0                            0x00001d9c   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadJoinWakeup                    0x00001da1   Thumb Code    30  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x00001da0   Section        0  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x00001dbe   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x00001dd0   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x00001dfc   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x00001e10   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x00001e37   Thumb Code    40  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x00001e36   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x00001e60   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x00001e70   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x00001e74   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x00001e88   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.14_0                            0x00001eb8   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.14_1                            0x00001ebc   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x00001ec0   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x00001ecc   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.12_0                            0x00001f04   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x00001f08   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x00001f38   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x00001fac   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x00001fb0   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_0                             0x00001fc8   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_1                             0x00001fcc   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x00001fd0   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x00001ff1   Thumb Code   108  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x00001ff0   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x0000205c   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x00002060   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.30_0                            0x00002068   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x0000206c   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.16_0                            0x0000208c   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x00002090   Section        0  main.o(.text.printArray)
    [Anonymous Symbol]                       0x00002130   Section        0  main.o(.text.printFinalSorted)
    [Anonymous Symbol]                       0x000021dc   Section        0  main.o(.text.prompt)
    [Anonymous Symbol]                       0x000021ec   Section        0  main.o(.text.quickSort)
    [Anonymous Symbol]                       0x00002350   Section        0  main.o(.text.start_us)
    [Anonymous Symbol]                       0x0000237c   Section        0  main.o(.text.stop_us)
    svcRtxDelay                              0x000023bf   Thumb Code    22  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x000023be   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelGetTickCount                 0x000023d5   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    [Anonymous Symbol]                       0x000023d4   Section        0  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    __arm_cp.14_0                            0x000023dc   Number         4  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    svcRtxKernelInitialize                   0x000023e1   Thumb Code   244  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x000023e0   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_2                            0x000024d4   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x000024d9   Thumb Code   124  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x000024d8   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_1                            0x00002554   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_2                            0x00002558   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_3                            0x0000255c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x00002561   Thumb Code   200  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x00002560   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x00002629   Thumb Code   272  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x00002628   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_0                             0x00002738   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_1                             0x0000273c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x00002741   Thumb Code   168  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x00002740   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x000027e9   Thumb Code   140  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x000027e8   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.10_0                            0x00002874   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexNew                           0x00002879   Thumb Code   100  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x00002878   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x000028dd   Thumb Code   176  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x000028dc   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxThreadExit                         0x0000298d   Thumb Code    72  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x0000298c   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.53_0                            0x000029d4   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadNew                          0x000029d9   Thumb Code   472  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x000029d8   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_0                            0x00002bb0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_1                            0x00002bb4   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_2                            0x00002bb8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_3                            0x00002bbc   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_4                            0x00002bc0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    i.GPIODirModeSet                         0x00002bc4   Section        0  gpio.o(i.GPIODirModeSet)
    i.GPIOPadConfigSet                       0x00002bec   Section        0  gpio.o(i.GPIOPadConfigSet)
    i.GPIOPinConfigure                       0x00002d5c   Section        0  gpio.o(i.GPIOPinConfigure)
    i.GPIOPinTypeUART                        0x00002da0   Section        0  gpio.o(i.GPIOPinTypeUART)
    i.IntEnable                              0x00002dbc   Section        0  interrupt.o(i.IntEnable)
    i.IntRegister                            0x00002e20   Section        0  interrupt.o(i.IntRegister)
    i.SysCtlClockFreqSet                     0x00002e54   Section        0  sysctl.o(i.SysCtlClockFreqSet)
    i.SysCtlPeripheralEnable                 0x00003138   Section        0  sysctl.o(i.SysCtlPeripheralEnable)
    i.SysCtlPeripheralReady                  0x00003160   Section        0  sysctl.o(i.SysCtlPeripheralReady)
    i.TimerConfigure                         0x0000318c   Section        0  timer.o(i.TimerConfigure)
    i.TimerDisable                           0x000031ec   Section        0  timer.o(i.TimerDisable)
    i.TimerEnable                            0x000031fc   Section        0  timer.o(i.TimerEnable)
    i.TimerLoadSet                           0x0000320a   Section        0  timer.o(i.TimerLoadSet)
    i.TimerValueGet                          0x0000321c   Section        0  timer.o(i.TimerValueGet)
    i.UARTCharGet                            0x00003226   Section        0  uart.o(i.UARTCharGet)
    i.UARTCharPut                            0x00003232   Section        0  uart.o(i.UARTCharPut)
    i.UARTCharsAvail                         0x0000323e   Section        0  uart.o(i.UARTCharsAvail)
    i.UARTConfigSetExpClk                    0x00003248   Section        0  uart.o(i.UARTConfigSetExpClk)
    i.UARTFIFODisable                        0x000032b6   Section        0  uart.o(i.UARTFIFODisable)
    i.UARTIntClear                           0x000032c0   Section        0  uart.o(i.UARTIntClear)
    i.UARTIntEnable                          0x000032c4   Section        0  uart.o(i.UARTIntEnable)
    i.UARTIntRegister                        0x000032cc   Section        0  uart.o(i.UARTIntRegister)
    i.UARTIntStatus                          0x00003324   Section        0  uart.o(i.UARTIntStatus)
    i.__0snprintf                            0x00003330   Section        0  printfa.o(i.__0snprintf)
    i.__0vsnprintf                           0x00003364   Section        0  printfa.o(i.__0vsnprintf)
    i.__aeabi_errno_addr                     0x00003398   Section        0  errno.o(i.__aeabi_errno_addr)
    i.__scatterload_copy                     0x000033a0   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x000033ae   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x000033b0   Section       14  handlers.o(i.__scatterload_zeroinit)
    _fp_digits                               0x000033c1   Thumb Code   366  printfa.o(i._fp_digits)
    i._fp_digits                             0x000033c0   Section        0  printfa.o(i._fp_digits)
    _printf_core                             0x00003545   Thumb Code  1744  printfa.o(i._printf_core)
    i._printf_core                           0x00003544   Section        0  printfa.o(i._printf_core)
    _printf_post_padding                     0x00003c21   Thumb Code    36  printfa.o(i._printf_post_padding)
    i._printf_post_padding                   0x00003c20   Section        0  printfa.o(i._printf_post_padding)
    _printf_pre_padding                      0x00003c45   Thumb Code    46  printfa.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x00003c44   Section        0  printfa.o(i._printf_pre_padding)
    _snputc                                  0x00003c73   Thumb Code    22  printfa.o(i._snputc)
    i._snputc                                0x00003c72   Section        0  printfa.o(i._snputc)
    g_ppui32GPIOIntMapBlizzard               0x00003c88   Data         192  gpio.o(.constdata)
    .constdata                               0x00003c88   Section      552  gpio.o(.constdata)
    g_ppui32GPIOIntMapSnowflake              0x00003d48   Data         216  gpio.o(.constdata)
    g_pui32GPIOBaseAddrs                     0x00003e20   Data         144  gpio.o(.constdata)
    g_pui32VCOFrequencies                    0x00003eb0   Data           8  sysctl.o(.constdata)
    .constdata                               0x00003eb0   Section      596  sysctl.o(.constdata)
    g_pui32Xtals                             0x00003eb8   Data         108  sysctl.o(.constdata)
    g_pppui32XTALtoVCO                       0x00003f24   Data         432  sysctl.o(.constdata)
    g_sXTALtoMEMTIM                          0x000040d4   Data          48  sysctl.o(.constdata)
    g_ppui32UARTIntMap                       0x00004104   Data          64  uart.o(.constdata)
    .constdata                               0x00004104   Section      128  uart.o(.constdata)
    g_ppui32UARTIntMapSnowflake              0x00004144   Data          64  uart.o(.constdata)
    g_pui32Priority                          0x00004184   Data          32  interrupt.o(.constdata)
    .constdata                               0x00004184   Section      268  interrupt.o(.constdata)
    g_pui32Regs                              0x000041a4   Data         156  interrupt.o(.constdata)
    g_pui32EnRegs                            0x00004240   Data          20  interrupt.o(.constdata)
    g_pui32Dii16Regs                         0x00004254   Data          20  interrupt.o(.constdata)
    g_pui32PendRegs                          0x00004268   Data          20  interrupt.o(.constdata)
    g_pui32UnpendRegs                        0x0000427c   Data          20  interrupt.o(.constdata)
    .constdata                               0x00004290   Section      129  ctype_o.o(.constdata)
    table                                    0x00004314   Data           4  ctype_o.o(.constdata)
    .constdata                               0x00004314   Section        4  ctype_o.o(.constdata)
    __tagsym$$used.0                         0x00004318   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.1                         0x00004388   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.0                         0x000043c0   Number         0  eventrecorder.o(.rodata.EventRecorderInfo)
    os_idle_thread_attr                      0x000043dc   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x000043dc   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x00004400   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x00004400   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x00004418   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x00004418   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    .L.str.9                                 0x0000443c   Data          21  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000443c   Section        0  main.o(.rodata.str1.1)
    .L.str.6                                 0x00004451   Data          17  main.o(.rodata.str1.1)
    .L.str.3                                 0x0000445f   Data           3  main.o(.rodata.str1.1)
    .L.str                                   0x00004462   Data          12  main.o(.rodata.str1.1)
    .L.str.1                                 0x0000446e   Data          16  main.o(.rodata.str1.1)
    .L.str.5                                 0x0000447e   Data          30  main.o(.rodata.str1.1)
    .L.str.10                                0x0000449c   Data          19  main.o(.rodata.str1.1)
    .L.str.2                                 0x000044af   Data           4  main.o(.rodata.str1.1)
    .L.str.7                                 0x000044b3   Data           7  main.o(.rodata.str1.1)
    .L.str.11                                0x000044ba   Data           6  main.o(.rodata.str1.1)
    .L.str.8                                 0x000044c0   Data          10  main.o(.rodata.str1.1)
    .L.str.4                                 0x000044ca   Data           3  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000044d0   Section        0  rtx_kernel.o(.rodata.str1.4)
    _rand_state                              0x20000000   Data           4  rand.o(.data)
    .data                                    0x20000000   Section        4  rand.o(.data)
    _errno                                   0x20000004   Data           4  errno.o(.data)
    .data                                    0x20000004   Section        4  errno.o(.data)
    g_pfnRAMVectors                          0x20000400   Data         620  interrupt.o(vtable)
    vtable                                   0x20000400   Section      620  interrupt.o(vtable)
    EventBuffer                              0x20000700   Data        1024  eventrecorder.o(.bss.noinit)
    [Anonymous Symbol]                       0x20000700   Section        0  eventrecorder.o(.bss.noinit)
    EventFilter                              0x20000b00   Data         128  eventrecorder.o(.bss.noinit)
    EventStatus                              0x20000b80   Data          36  eventrecorder.o(.bss.noinit)
    os_isr_queue                             0x20000ba8   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x20000ba8   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x20000be8   Data       32768  rtx_lib.o(.bss.os)
    PendST                                   0x20008be8   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x20008be8   Section        0  os_systick.o(.bss.os)
    os_timer_mq_cb                           0x20008bec   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x20008bec   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x20008c20   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x20008c20   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x20008c70   Data          68  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x20008c70   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20008cb4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x20008cf8   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x20008cf8   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x20008ef8   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x20008ef8   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    STACK                                    0x20009108   Section      512  startup_tm4c129.o(STACK)
    FPCCR                                    0xe000ef34   Number         0  irq_armv7m.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c129.o(RESET)
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x00000200   Data           0  startup_tm4c129.o(RESET)
    __Vectors_Size                           0x00000200   Number         0  startup_tm4c129.o ABSOLUTE
    __main                                   0x00000201   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00000201   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x00000205   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000209   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000209   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000209   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000209   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x00000211   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x00000211   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x00000215   Thumb Code     8  startup_tm4c129.o(.text)
    NMI_Handler                              0x0000021d   Thumb Code     2  startup_tm4c129.o(.text)
    HardFault_Handler                        0x0000021f   Thumb Code     2  startup_tm4c129.o(.text)
    MemManage_Handler                        0x00000221   Thumb Code     2  startup_tm4c129.o(.text)
    BusFault_Handler                         0x00000223   Thumb Code     2  startup_tm4c129.o(.text)
    UsageFault_Handler                       0x00000225   Thumb Code     2  startup_tm4c129.o(.text)
    DebugMon_Handler                         0x00000229   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOA_Handler                            0x0000022f   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOB_Handler                            0x00000231   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOC_Handler                            0x00000233   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOD_Handler                            0x00000235   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOE_Handler                            0x00000237   Thumb Code     2  startup_tm4c129.o(.text)
    UART0_Handler                            0x00000239   Thumb Code     2  startup_tm4c129.o(.text)
    UART1_Handler                            0x0000023b   Thumb Code     2  startup_tm4c129.o(.text)
    SSI0_Handler                             0x0000023d   Thumb Code     2  startup_tm4c129.o(.text)
    I2C0_Handler                             0x0000023f   Thumb Code     2  startup_tm4c129.o(.text)
    PMW0_FAULT_Handler                       0x00000241   Thumb Code     2  startup_tm4c129.o(.text)
    PWM0_0_Handler                           0x00000243   Thumb Code     2  startup_tm4c129.o(.text)
    PWM0_1_Handler                           0x00000245   Thumb Code     2  startup_tm4c129.o(.text)
    PWM0_2_Handler                           0x00000247   Thumb Code     2  startup_tm4c129.o(.text)
    QEI0_Handler                             0x00000249   Thumb Code     2  startup_tm4c129.o(.text)
    ADC0SS0_Handler                          0x0000024b   Thumb Code     2  startup_tm4c129.o(.text)
    ADC0SS1_Handler                          0x0000024d   Thumb Code     2  startup_tm4c129.o(.text)
    ADC0SS2_Handler                          0x0000024f   Thumb Code     2  startup_tm4c129.o(.text)
    ADC0SS3_Handler                          0x00000251   Thumb Code     2  startup_tm4c129.o(.text)
    WDT0_Handler                             0x00000253   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER0A_Handler                          0x00000255   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER0B_Handler                          0x00000257   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER1A_Handler                          0x00000259   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER1B_Handler                          0x0000025b   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER2A_Handler                          0x0000025d   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER2B_Handler                          0x0000025f   Thumb Code     2  startup_tm4c129.o(.text)
    COMP0_Handler                            0x00000261   Thumb Code     2  startup_tm4c129.o(.text)
    COMP1_Handler                            0x00000263   Thumb Code     2  startup_tm4c129.o(.text)
    COMP2_Handler                            0x00000265   Thumb Code     2  startup_tm4c129.o(.text)
    SYSCTL_Handler                           0x00000267   Thumb Code     2  startup_tm4c129.o(.text)
    FLASH_Handler                            0x00000269   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOF_Handler                            0x0000026b   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOG_Handler                            0x0000026d   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOH_Handler                            0x0000026f   Thumb Code     2  startup_tm4c129.o(.text)
    UART2_Handler                            0x00000271   Thumb Code     2  startup_tm4c129.o(.text)
    SSI1_Handler                             0x00000273   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER3A_Handler                          0x00000275   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER3B_Handler                          0x00000277   Thumb Code     2  startup_tm4c129.o(.text)
    I2C1_Handler                             0x00000279   Thumb Code     2  startup_tm4c129.o(.text)
    CAN0_Handler                             0x0000027b   Thumb Code     2  startup_tm4c129.o(.text)
    CAN1_Handler                             0x0000027d   Thumb Code     2  startup_tm4c129.o(.text)
    ETH_Handler                              0x0000027f   Thumb Code     2  startup_tm4c129.o(.text)
    HIB_Handler                              0x00000281   Thumb Code     2  startup_tm4c129.o(.text)
    USB0_Handler                             0x00000283   Thumb Code     2  startup_tm4c129.o(.text)
    PWM0_3_Handler                           0x00000285   Thumb Code     2  startup_tm4c129.o(.text)
    UDMA_Handler                             0x00000287   Thumb Code     2  startup_tm4c129.o(.text)
    UDMAERR_Handler                          0x00000289   Thumb Code     2  startup_tm4c129.o(.text)
    ADC1SS0_Handler                          0x0000028b   Thumb Code     2  startup_tm4c129.o(.text)
    ADC1SS1_Handler                          0x0000028d   Thumb Code     2  startup_tm4c129.o(.text)
    ADC1SS2_Handler                          0x0000028f   Thumb Code     2  startup_tm4c129.o(.text)
    ADC1SS3_Handler                          0x00000291   Thumb Code     2  startup_tm4c129.o(.text)
    EBI0_Handler                             0x00000293   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOJ_Handler                            0x00000295   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOK_Handler                            0x00000297   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOL_Handler                            0x00000299   Thumb Code     2  startup_tm4c129.o(.text)
    SSI2_Handler                             0x0000029b   Thumb Code     2  startup_tm4c129.o(.text)
    SSI3_Handler                             0x0000029d   Thumb Code     2  startup_tm4c129.o(.text)
    UART3_Handler                            0x0000029f   Thumb Code     2  startup_tm4c129.o(.text)
    UART4_Handler                            0x000002a1   Thumb Code     2  startup_tm4c129.o(.text)
    UART5_Handler                            0x000002a3   Thumb Code     2  startup_tm4c129.o(.text)
    UART6_Handler                            0x000002a5   Thumb Code     2  startup_tm4c129.o(.text)
    UART7_Handler                            0x000002a7   Thumb Code     2  startup_tm4c129.o(.text)
    I2C2_Handler                             0x000002a9   Thumb Code     2  startup_tm4c129.o(.text)
    I2C3_Handler                             0x000002ab   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER4A_Handler                          0x000002ad   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER4B_Handler                          0x000002af   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER5A_Handler                          0x000002b1   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER5B_Handler                          0x000002b3   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER0A_Handler                         0x000002b5   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER0B_Handler                         0x000002b7   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER1A_Handler                         0x000002b9   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER1B_Handler                         0x000002bb   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER2A_Handler                         0x000002bd   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER2B_Handler                         0x000002bf   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER3A_Handler                         0x000002c1   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER3B_Handler                         0x000002c3   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER4A_Handler                         0x000002c5   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER4B_Handler                         0x000002c7   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER5A_Handler                         0x000002c9   Thumb Code     2  startup_tm4c129.o(.text)
    WTIMER5B_Handler                         0x000002cb   Thumb Code     2  startup_tm4c129.o(.text)
    FPU_Handler                              0x000002cd   Thumb Code     2  startup_tm4c129.o(.text)
    I2C4_Handler                             0x000002cf   Thumb Code     2  startup_tm4c129.o(.text)
    I2C5_Handler                             0x000002d1   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOM_Handler                            0x000002d3   Thumb Code     2  startup_tm4c129.o(.text)
    GPION_Handler                            0x000002d5   Thumb Code     2  startup_tm4c129.o(.text)
    TAMPER_Handler                           0x000002d7   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOP0_Handler                           0x000002d9   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOP1_Handler                           0x000002db   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOP2_Handler                           0x000002dd   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOP3_Handler                           0x000002df   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOP4_Handler                           0x000002e1   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOP5_Handler                           0x000002e3   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOP6_Handler                           0x000002e5   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOP7_Handler                           0x000002e7   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOQ0_Handler                           0x000002e9   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOQ1_Handler                           0x000002eb   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOQ2_Handler                           0x000002ed   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOQ3_Handler                           0x000002ef   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOQ4_Handler                           0x000002f1   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOQ5_Handler                           0x000002f3   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOQ6_Handler                           0x000002f5   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOQ7_Handler                           0x000002f7   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOR_Handler                            0x000002f9   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOS_Handler                            0x000002fb   Thumb Code     2  startup_tm4c129.o(.text)
    SHAMD5_Handler                           0x000002fd   Thumb Code     2  startup_tm4c129.o(.text)
    AES_Handler                              0x000002ff   Thumb Code     2  startup_tm4c129.o(.text)
    DES3DES_Handler                          0x00000301   Thumb Code     2  startup_tm4c129.o(.text)
    LCDCONTROLLER_Handler                    0x00000303   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER6A_Handler                          0x00000305   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER6B_Handler                          0x00000307   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER7A_Handler                          0x00000309   Thumb Code     2  startup_tm4c129.o(.text)
    TIMER7B_Handler                          0x0000030b   Thumb Code     2  startup_tm4c129.o(.text)
    I2C6_Handler                             0x0000030d   Thumb Code     2  startup_tm4c129.o(.text)
    I2C7_Handler                             0x0000030f   Thumb Code     2  startup_tm4c129.o(.text)
    HIMSCANKEYBOARD_Handler                  0x00000311   Thumb Code     2  startup_tm4c129.o(.text)
    ONEWIRE_Handler                          0x00000313   Thumb Code     2  startup_tm4c129.o(.text)
    HIMPS2_Handler                           0x00000315   Thumb Code     2  startup_tm4c129.o(.text)
    HIMLEDSEQUENCER_Handler                  0x00000317   Thumb Code     2  startup_tm4c129.o(.text)
    HIMCONSUMERIR_Handler                    0x00000319   Thumb Code     2  startup_tm4c129.o(.text)
    I2C8_Handler                             0x0000031b   Thumb Code     2  startup_tm4c129.o(.text)
    I2C9_Handler                             0x0000031d   Thumb Code     2  startup_tm4c129.o(.text)
    GPIOT_Handler                            0x0000031f   Thumb Code     2  startup_tm4c129.o(.text)
    SVC_Handler                              0x00000329   Thumb Code   154  irq_armv7m.o(.text)
    PendSV_Handler                           0x000003c3   Thumb Code    16  irq_armv7m.o(.text)
    SysTick_Handler                          0x000003d3   Thumb Code    16  irq_armv7m.o(.text)
    __aeabi_uldivmod                         0x000003f1   Thumb Code    98  uldiv.o(.text)
    rand                                     0x00000455   Thumb Code    20  rand.o(.text)
    srand                                    0x00000469   Thumb Code     6  rand.o(.text)
    __aeabi_memcpy                           0x00000479   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x00000479   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x00000479   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x0000049d   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x0000049d   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x0000049d   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000004ab   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000004ab   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000004ab   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000004af   Thumb Code    18  memseta.o(.text)
    strtoul                                  0x000004c1   Thumb Code   114  strtoul.o(.text)
    __aeabi_uidiv                            0x00000533   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x00000533   Thumb Code    44  uidiv.o(.text)
    __aeabi_llsl                             0x0000055f   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x0000055f   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x0000057d   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x0000057d   Thumb Code     0  llushr.o(.text)
    __rt_ctype_table                         0x0000059d   Thumb Code     4  ctype_o.o(.text)
    _strtoul                                 0x000005a5   Thumb Code   158  _strtoul.o(.text)
    __I$use$fp                               0x00000643   Thumb Code     0  iusefp.o(.text)
    __aeabi_dadd                             0x00000643   Thumb Code   322  dadd.o(.text)
    __aeabi_dsub                             0x00000785   Thumb Code     6  dadd.o(.text)
    __aeabi_drsub                            0x0000078b   Thumb Code     6  dadd.o(.text)
    __aeabi_dmul                             0x00000791   Thumb Code   228  dmul.o(.text)
    __aeabi_ddiv                             0x00000875   Thumb Code   222  ddiv.o(.text)
    __aeabi_d2ulz                            0x00000953   Thumb Code    48  dfixul.o(.text)
    __aeabi_cdrcmple                         0x00000985   Thumb Code    48  cdrcmple.o(.text)
    __scatterload                            0x000009b5   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x000009b5   Thumb Code     0  init.o(.text)
    __aeabi_lasr                             0x000009e5   Thumb Code    36  llsshr.o(.text)
    _ll_sshift_r                             0x000009e5   Thumb Code     0  llsshr.o(.text)
    _chval                                   0x00000a09   Thumb Code    28  _chval.o(.text)
    _double_round                            0x00000a25   Thumb Code    30  depilogue.o(.text)
    _double_epilogue                         0x00000a43   Thumb Code   156  depilogue.o(.text)
    __decompress                             0x00000adf   Thumb Code     0  __dczerorl.o(.text)
    __decompress0                            0x00000adf   Thumb Code    58  __dczerorl.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x00000bcd   Thumb Code     8  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x00000bd5   Thumb Code    32  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x00000bf9   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x00000c01   Thumb Code    48  os_systick.o(.text.OS_Tick_Setup)
    SetupTimer                               0x00000c65   Thumb Code    48  main.o(.text.SetupTimer)
    SetupUart                                0x00000c95   Thumb Code   132  main.o(.text.SetupUart)
    SystemInit                               0x00000d19   Thumb Code    36  system_tm4c129.o(.text.SystemInit)
    Thread_Input                             0x00000da1   Thumb Code   440  main.o(.text.Thread_Input)
    Thread_Sort                              0x00000f59   Thumb Code   294  main.o(.text.Thread_Sort)
    UARTIntHandler                           0x000010c9   Thumb Code   194  main.o(.text.UARTIntHandler)
    bubbleSort                               0x0000118d   Thumb Code   218  main.o(.text.bubbleSort)
    insertionSort                            0x00001269   Thumb Code   226  main.o(.text.insertionSort)
    isSorted                                 0x0000134d   Thumb Code    78  main.o(.text.isSorted)
    logMessage                               0x0000139d   Thumb Code   116  main.o(.text.logMessage)
    main                                     0x00001411   Thumb Code   314  main.o(.text.main)
    osDelay                                  0x0000154d   Thumb Code    32  rtx_delay.o(.text.osDelay)
    osKernelGetTickCount                     0x00001571   Thumb Code    32  rtx_kernel.o(.text.osKernelGetTickCount)
    osKernelInitialize                       0x00001599   Thumb Code    40  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x000015c5   Thumb Code    32  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x000015e9   Thumb Code   108  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x00001659   Thumb Code    32  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x0000167d   Thumb Code   124  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x000016fd   Thumb Code    32  rtx_mutex.o(.text.osMutexAcquire)
    osMutexNew                               0x00001721   Thumb Code    32  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x00001745   Thumb Code    32  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x00001769   Thumb Code    46  rtx_config.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x00001799   Thumb Code     8  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelErrorNotify                   0x000017a1   Thumb Code     4  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelPreInit                       0x000017a5   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x000017a7   Thumb Code   108  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x00001813   Thumb Code    66  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x00001855   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x0000188b   Thumb Code    58  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x000018c5   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x0000190f   Thumb Code    56  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x000019f1   Thumb Code    32  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x00001a15   Thumb Code    72  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x00001a5d   Thumb Code    72  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x00001aa5   Thumb Code   136  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x00001b2d   Thumb Code   108  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x00001c89   Thumb Code    80  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x00001cf9   Thumb Code    80  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x00001dbf   Thumb Code    18  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x00001dd1   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x00001dfd   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x00001e11   Thumb Code    38  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x00001e61   Thumb Code    16  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x00001e75   Thumb Code    20  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStartup                       0x00001e89   Thumb Code    48  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x00001ec1   Thumb Code    12  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x00001ecd   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x00001f09   Thumb Code    48  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x00001f39   Thumb Code   116  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x00001fb1   Thumb Code    24  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x00001fd1   Thumb Code    32  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x00002061   Thumb Code     8  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x0000206d   Thumb Code    32  rtx_thread.o(.text.osThreadNew)
    printArray                               0x00002091   Thumb Code   160  main.o(.text.printArray)
    printFinalSorted                         0x00002131   Thumb Code   172  main.o(.text.printFinalSorted)
    prompt                                   0x000021dd   Thumb Code    16  main.o(.text.prompt)
    quickSort                                0x000021ed   Thumb Code   356  main.o(.text.quickSort)
    start_us                                 0x00002351   Thumb Code    44  main.o(.text.start_us)
    stop_us                                  0x0000237d   Thumb Code    66  main.o(.text.stop_us)
    GPIODirModeSet                           0x00002bc5   Thumb Code    40  gpio.o(i.GPIODirModeSet)
    GPIOPadConfigSet                         0x00002bed   Thumb Code   354  gpio.o(i.GPIOPadConfigSet)
    GPIOPinConfigure                         0x00002d5d   Thumb Code    60  gpio.o(i.GPIOPinConfigure)
    GPIOPinTypeUART                          0x00002da1   Thumb Code    28  gpio.o(i.GPIOPinTypeUART)
    IntEnable                                0x00002dbd   Thumb Code    92  interrupt.o(i.IntEnable)
    IntRegister                              0x00002e21   Thumb Code    44  interrupt.o(i.IntRegister)
    SysCtlClockFreqSet                       0x00002e55   Thumb Code   700  sysctl.o(i.SysCtlClockFreqSet)
    SysCtlPeripheralEnable                   0x00003139   Thumb Code    36  sysctl.o(i.SysCtlPeripheralEnable)
    SysCtlPeripheralReady                    0x00003161   Thumb Code    40  sysctl.o(i.SysCtlPeripheralReady)
    TimerConfigure                           0x0000318d   Thumb Code    88  timer.o(i.TimerConfigure)
    TimerDisable                             0x000031ed   Thumb Code    16  timer.o(i.TimerDisable)
    TimerEnable                              0x000031fd   Thumb Code    14  timer.o(i.TimerEnable)
    TimerLoadSet                             0x0000320b   Thumb Code    18  timer.o(i.TimerLoadSet)
    TimerValueGet                            0x0000321d   Thumb Code    10  timer.o(i.TimerValueGet)
    UARTCharGet                              0x00003227   Thumb Code    12  uart.o(i.UARTCharGet)
    UARTCharPut                              0x00003233   Thumb Code    12  uart.o(i.UARTCharPut)
    UARTCharsAvail                           0x0000323f   Thumb Code    10  uart.o(i.UARTCharsAvail)
    UARTConfigSetExpClk                      0x00003249   Thumb Code   110  uart.o(i.UARTConfigSetExpClk)
    UARTFIFODisable                          0x000032b7   Thumb Code    10  uart.o(i.UARTFIFODisable)
    UARTIntClear                             0x000032c1   Thumb Code     4  uart.o(i.UARTIntClear)
    UARTIntEnable                            0x000032c5   Thumb Code     8  uart.o(i.UARTIntEnable)
    UARTIntRegister                          0x000032cd   Thumb Code    70  uart.o(i.UARTIntRegister)
    UARTIntStatus                            0x00003325   Thumb Code    10  uart.o(i.UARTIntStatus)
    __0snprintf                              0x00003331   Thumb Code    48  printfa.o(i.__0snprintf)
    __1snprintf                              0x00003331   Thumb Code     0  printfa.o(i.__0snprintf)
    __2snprintf                              0x00003331   Thumb Code     0  printfa.o(i.__0snprintf)
    __c89snprintf                            0x00003331   Thumb Code     0  printfa.o(i.__0snprintf)
    snprintf                                 0x00003331   Thumb Code     0  printfa.o(i.__0snprintf)
    __0vsnprintf                             0x00003365   Thumb Code    46  printfa.o(i.__0vsnprintf)
    __1vsnprintf                             0x00003365   Thumb Code     0  printfa.o(i.__0vsnprintf)
    __2vsnprintf                             0x00003365   Thumb Code     0  printfa.o(i.__0vsnprintf)
    __c89vsnprintf                           0x00003365   Thumb Code     0  printfa.o(i.__0vsnprintf)
    vsnprintf                                0x00003365   Thumb Code     0  printfa.o(i.__0vsnprintf)
    __aeabi_errno_addr                       0x00003399   Thumb Code     4  errno.o(i.__aeabi_errno_addr)
    __rt_errno_addr                          0x00003399   Thumb Code     0  errno.o(i.__aeabi_errno_addr)
    __scatterload_copy                       0x000033a1   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x000033af   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x000033b1   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    __ctype_table                            0x00004290   Data         129  ctype_o.o(.constdata)
    osRtxConfig                              0x00004318   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x00004388   Data          56  rtx_lib.o(.rodata)
    EventRecorderInfo                        0x000043c0   Data          24  eventrecorder.o(.rodata.EventRecorderInfo)
    osRtxUserSVC                             0x000043d8   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x000044dc   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x000044fc   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000008   Data           4  system_tm4c129.o(.data.SystemCoreClock)
    bubbleDone                               0x2000000c   Data           1  main.o(.data.bubbleDone)
    insertionDone                            0x2000000d   Data           1  main.o(.data.insertionDone)
    osRtxInfo                                0x20000010   Data         164  rtx_kernel.o(.data.os)
    quickDone                                0x200000b4   Data           1  main.o(.data.quickDone)
    SysClock                                 0x20000680   Data           4  main.o(.bss.SysClock)
    bufferIndex                              0x20000684   Data           4  main.o(.bss.bufferIndex)
    inputBuffer                              0x20000688   Data         100  main.o(.bss.inputBuffer)
    inputReady                               0x200006ec   Data           1  main.o(.bss.inputReady)
    .bss.os.msgqueue.cb$$Base                0x20008bec   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20008c20   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x20008c70   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x20008cf8   Number         0  rtx_lib.o(.bss.os.thread.cb)
    queueBubble                              0x200090f8   Data           4  main.o(.bss.queueBubble)
    queueInsert                              0x200090fc   Data           4  main.o(.bss.queueInsert)
    queueQuick                               0x20009100   Data           4  main.o(.bss.queueQuick)
    uartMutex                                0x20009104   Data           4  main.o(.bss.uartMutex)
    __initial_sp                             0x20009308   Data           0  startup_tm4c129.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000215

  Load Region LR_1 (Base: 0x00000000, Size: 0x00004e6c, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00004820])

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x000044fc, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000200   Data   RO          152    RESET               startup_tm4c129.o
    0x00000200   0x00000200   0x00000000   Code   RO         2006  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x00000200   0x00000200   0x00000004   Code   RO         2050    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x00000204   0x00000204   0x00000004   Code   RO         2053    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x00000208   0x00000208   0x00000000   Code   RO         2055    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x00000208   0x00000208   0x00000000   Code   RO         2057    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x00000208   0x00000208   0x00000008   Code   RO         2058    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x00000210   0x00000210   0x00000000   Code   RO         2060    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x00000210   0x00000210   0x00000000   Code   RO         2062    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x00000210   0x00000210   0x00000004   Code   RO         2051    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x00000214   0x00000214   0x00000114   Code   RO          153  * .text               startup_tm4c129.o
    0x00000328   0x00000328   0x000000c8   Code   RO         1772    .text               RTX_CM4F.lib(irq_armv7m.o)
    0x000003f0   0x000003f0   0x00000062   Code   RO         2009    .text               mc_w.l(uldiv.o)
    0x00000452   0x00000452   0x00000002   PAD
    0x00000454   0x00000454   0x00000024   Code   RO         2011    .text               mc_w.l(rand.o)
    0x00000478   0x00000478   0x00000024   Code   RO         2014    .text               mc_w.l(memcpya.o)
    0x0000049c   0x0000049c   0x00000024   Code   RO         2016    .text               mc_w.l(memseta.o)
    0x000004c0   0x000004c0   0x00000072   Code   RO         2048    .text               mc_w.l(strtoul.o)
    0x00000532   0x00000532   0x0000002c   Code   RO         2078    .text               mc_w.l(uidiv.o)
    0x0000055e   0x0000055e   0x0000001e   Code   RO         2080    .text               mc_w.l(llshl.o)
    0x0000057c   0x0000057c   0x00000020   Code   RO         2082    .text               mc_w.l(llushr.o)
    0x0000059c   0x0000059c   0x00000008   Code   RO         2084    .text               mc_w.l(ctype_o.o)
    0x000005a4   0x000005a4   0x0000009e   Code   RO         2119    .text               mc_w.l(_strtoul.o)
    0x00000642   0x00000642   0x00000000   Code   RO         2121    .text               mc_w.l(iusefp.o)
    0x00000642   0x00000642   0x0000014e   Code   RO         2122    .text               mf_w.l(dadd.o)
    0x00000790   0x00000790   0x000000e4   Code   RO         2124    .text               mf_w.l(dmul.o)
    0x00000874   0x00000874   0x000000de   Code   RO         2126    .text               mf_w.l(ddiv.o)
    0x00000952   0x00000952   0x00000030   Code   RO         2128    .text               mf_w.l(dfixul.o)
    0x00000982   0x00000982   0x00000002   PAD
    0x00000984   0x00000984   0x00000030   Code   RO         2130    .text               mf_w.l(cdrcmple.o)
    0x000009b4   0x000009b4   0x00000030   Code   RO         2132    .text               mc_w.l(init.o)
    0x000009e4   0x000009e4   0x00000024   Code   RO         2135    .text               mc_w.l(llsshr.o)
    0x00000a08   0x00000a08   0x0000001c   Code   RO         2137    .text               mc_w.l(_chval.o)
    0x00000a24   0x00000a24   0x000000ba   Code   RO         2140    .text               mf_w.l(depilogue.o)
    0x00000ade   0x00000ade   0x0000003a   Code   RO         2150    .text               mc_w.l(__dczerorl.o)
    0x00000b18   0x00000b18   0x00000040   Code   RO         1753    .text.MessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x00000b58   0x00000b58   0x00000058   Code   RO         1747    .text.MessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x00000bb0   0x00000bb0   0x0000001c   Code   RO         1745    .text.MessageQueueRemove  RTX_CM4F.lib(rtx_msgqueue.o)
    0x00000bcc   0x00000bcc   0x00000008   Code   RO         1986    .text.OS_Tick_AcknowledgeIRQ  RTX_CM4F.lib(os_systick.o)
    0x00000bd4   0x00000bd4   0x00000024   Code   RO         1982    .text.OS_Tick_Enable  RTX_CM4F.lib(os_systick.o)
    0x00000bf8   0x00000bf8   0x00000006   Code   RO         1988    .text.OS_Tick_GetIRQn  RTX_CM4F.lib(os_systick.o)
    0x00000bfe   0x00000bfe   0x00000002   PAD
    0x00000c00   0x00000c00   0x00000040   Code   RO         1980    .text.OS_Tick_Setup  RTX_CM4F.lib(os_systick.o)
    0x00000c40   0x00000c40   0x0000000c   Code   RO         1459    .text.OUTLINED_FUNCTION_0  RTX_CM4F.lib(rtx_kernel.o)
    0x00000c4c   0x00000c4c   0x0000000c   Code   RO         1761    .text.OUTLINED_FUNCTION_0  RTX_CM4F.lib(rtx_msgqueue.o)
    0x00000c58   0x00000c58   0x00000006   Code   RO         1461    .text.OUTLINED_FUNCTION_1  RTX_CM4F.lib(rtx_kernel.o)
    0x00000c5e   0x00000c5e   0x00000006   Code   RO         1763    .text.OUTLINED_FUNCTION_1  RTX_CM4F.lib(rtx_msgqueue.o)
    0x00000c64   0x00000c64   0x00000030   Code   RO            6    .text.SetupTimer    main.o
    0x00000c94   0x00000c94   0x00000084   Code   RO            2    .text.SetupUart     main.o
    0x00000d18   0x00000d18   0x00000024   Code   RO          162    .text.SystemInit    system_tm4c129.o
    0x00000d3c   0x00000d3c   0x00000064   Code   RO         1551    .text.ThreadFlagsCheck  RTX_CM4F.lib(rtx_thread.o)
    0x00000da0   0x00000da0   0x000001b8   Code   RO           30    .text.Thread_Input  main.o
    0x00000f58   0x00000f58   0x00000126   Code   RO           28    .text.Thread_Sort   main.o
    0x0000107e   0x0000107e   0x00000002   PAD
    0x00001080   0x00001080   0x00000048   Code   RO         1651    .text.TimerInsert   RTX_CM4F.lib(rtx_timer.o)
    0x000010c8   0x000010c8   0x000000c2   Code   RO            4    .text.UARTIntHandler  main.o
    0x0000118a   0x0000118a   0x00000002   PAD
    0x0000118c   0x0000118c   0x000000da   Code   RO           22    .text.bubbleSort    main.o
    0x00001266   0x00001266   0x00000002   PAD
    0x00001268   0x00001268   0x000000e2   Code   RO           24    .text.insertionSort  main.o
    0x0000134a   0x0000134a   0x00000002   PAD
    0x0000134c   0x0000134c   0x0000004e   Code   RO           20    .text.isSorted      main.o
    0x0000139a   0x0000139a   0x00000002   PAD
    0x0000139c   0x0000139c   0x00000074   Code   RO           12    .text.logMessage    main.o
    0x00001410   0x00001410   0x0000013a   Code   RO           32    .text.main          main.o
    0x0000154a   0x0000154a   0x00000002   PAD
    0x0000154c   0x0000154c   0x00000024   Code   RO         1617    .text.osDelay       RTX_CM4F.lib(rtx_delay.o)
    0x00001570   0x00001570   0x00000028   Code   RO         1427    .text.osKernelGetTickCount  RTX_CM4F.lib(rtx_kernel.o)
    0x00001598   0x00001598   0x0000002c   Code   RO         1405    .text.osKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x000015c4   0x000015c4   0x00000024   Code   RO         1415    .text.osKernelStart  RTX_CM4F.lib(rtx_kernel.o)
    0x000015e8   0x000015e8   0x00000070   Code   RO         1721    .text.osMessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x00001658   0x00001658   0x00000024   Code   RO         1715    .text.osMessageQueueNew  RTX_CM4F.lib(rtx_msgqueue.o)
    0x0000167c   0x0000167c   0x00000080   Code   RO         1719    .text.osMessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x000016fc   0x000016fc   0x00000024   Code   RO         1683    .text.osMutexAcquire  RTX_CM4F.lib(rtx_mutex.o)
    0x00001720   0x00001720   0x00000024   Code   RO         1679    .text.osMutexNew    RTX_CM4F.lib(rtx_mutex.o)
    0x00001744   0x00001744   0x00000024   Code   RO         1685    .text.osMutexRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x00001768   0x00001768   0x0000002e   Code   RO           56    .text.osRtxErrorNotify  rtx_config.o
    0x00001796   0x00001796   0x00000002   PAD
    0x00001798   0x00001798   0x00000008   Code   RO           54    .text.osRtxIdleThread  rtx_config.o
    0x000017a0   0x000017a0   0x00000004   Code   RO         1403    .text.osRtxKernelErrorNotify  RTX_CM4F.lib(rtx_kernel.o)
    0x000017a4   0x000017a4   0x00000002   Code   RO         1401    .text.osRtxKernelPreInit  RTX_CM4F.lib(rtx_kernel.o)
    0x000017a6   0x000017a6   0x0000006c   Code   RO         1902    .text.osRtxMemoryAlloc  RTX_CM4F.lib(rtx_memory.o)
    0x00001812   0x00001812   0x00000042   Code   RO         1904    .text.osRtxMemoryFree  RTX_CM4F.lib(rtx_memory.o)
    0x00001854   0x00001854   0x00000036   Code   RO         1900    .text.osRtxMemoryInit  RTX_CM4F.lib(rtx_memory.o)
    0x0000188a   0x0000188a   0x0000003a   Code   RO         1916    .text.osRtxMemoryPoolAlloc  RTX_CM4F.lib(rtx_mempool.o)
    0x000018c4   0x000018c4   0x0000004a   Code   RO         1918    .text.osRtxMemoryPoolFree  RTX_CM4F.lib(rtx_mempool.o)
    0x0000190e   0x0000190e   0x00000038   Code   RO         1914    .text.osRtxMemoryPoolInit  RTX_CM4F.lib(rtx_mempool.o)
    0x00001946   0x00001946   0x000000aa   Code   RO         1743    .text.osRtxMessageQueuePostProcess  RTX_CM4F.lib(rtx_msgqueue.o)
    0x000019f0   0x000019f0   0x00000024   Code   RO         1711    .text.osRtxMessageQueueTimerSetup  RTX_CM4F.lib(rtx_msgqueue.o)
    0x00001a14   0x00001a14   0x00000048   Code   RO         1675    .text.osRtxMutexOwnerRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x00001a5c   0x00001a5c   0x00000048   Code   RO         1677    .text.osRtxMutexOwnerRestore  RTX_CM4F.lib(rtx_mutex.o)
    0x00001aa4   0x00001aa4   0x00000088   Code   RO         1968    .text.osRtxPendSV_Handler  RTX_CM4F.lib(rtx_system.o)
    0x00001b2c   0x00001b2c   0x00000070   Code   RO         1970    .text.osRtxPostProcess  RTX_CM4F.lib(rtx_system.o)
    0x00001b9c   0x00001b9c   0x00000034   Code   RO         1491    .text.osRtxThreadBlock  RTX_CM4F.lib(rtx_thread.o)
    0x00001bd0   0x00001bd0   0x0000007c   Code   RO         1499    .text.osRtxThreadDelayInsert  RTX_CM4F.lib(rtx_thread.o)
    0x00001c4c   0x00001c4c   0x0000003c   Code   RO         1495    .text.osRtxThreadDelayRemove  RTX_CM4F.lib(rtx_thread.o)
    0x00001c88   0x00001c88   0x00000050   Code   RO         1483    .text.osRtxThreadDelayTick  RTX_CM4F.lib(rtx_thread.o)
    0x00001cd8   0x00001cd8   0x00000020   Code   RO         1583    .text.osRtxThreadDestroy  RTX_CM4F.lib(rtx_thread.o)
    0x00001cf8   0x00001cf8   0x00000050   Code   RO         1489    .text.osRtxThreadDispatch  RTX_CM4F.lib(rtx_thread.o)
    0x00001d48   0x00001d48   0x00000058   Code   RO         1575    .text.osRtxThreadFree  RTX_CM4F.lib(rtx_thread.o)
    0x00001da0   0x00001da0   0x0000001e   Code   RO         1581    .text.osRtxThreadJoinWakeup  RTX_CM4F.lib(rtx_thread.o)
    0x00001dbe   0x00001dbe   0x00000012   Code   RO         1475    .text.osRtxThreadListGet  RTX_CM4F.lib(rtx_thread.o)
    0x00001dd0   0x00001dd0   0x0000002c   Code   RO         1473    .text.osRtxThreadListPut  RTX_CM4F.lib(rtx_thread.o)
    0x00001dfc   0x00001dfc   0x00000014   Code   RO         1479    .text.osRtxThreadListRemove  RTX_CM4F.lib(rtx_thread.o)
    0x00001e10   0x00001e10   0x00000026   Code   RO         1477    .text.osRtxThreadListSort  RTX_CM4F.lib(rtx_thread.o)
    0x00001e36   0x00001e36   0x00000028   Code   RO         1549    .text.osRtxThreadPostProcess  RTX_CM4F.lib(rtx_thread.o)
    0x00001e5e   0x00001e5e   0x00000002   PAD
    0x00001e60   0x00001e60   0x00000014   Code   RO         1481    .text.osRtxThreadReadyPut  RTX_CM4F.lib(rtx_thread.o)
    0x00001e74   0x00001e74   0x00000014   Code   RO         1485    .text.osRtxThreadRegPtr  RTX_CM4F.lib(rtx_thread.o)
    0x00001e88   0x00001e88   0x00000038   Code   RO         1501    .text.osRtxThreadStartup  RTX_CM4F.lib(rtx_thread.o)
    0x00001ec0   0x00001ec0   0x0000000c   Code   RO         1487    .text.osRtxThreadSwitch  RTX_CM4F.lib(rtx_thread.o)
    0x00001ecc   0x00001ecc   0x0000003c   Code   RO         1497    .text.osRtxThreadWaitEnter  RTX_CM4F.lib(rtx_thread.o)
    0x00001f08   0x00001f08   0x00000030   Code   RO         1493    .text.osRtxThreadWaitExit  RTX_CM4F.lib(rtx_thread.o)
    0x00001f38   0x00001f38   0x00000078   Code   RO         1966    .text.osRtxTick_Handler  RTX_CM4F.lib(rtx_system.o)
    0x00001fb0   0x00001fb0   0x00000020   Code   RO         1633    .text.osRtxTimerSetup  RTX_CM4F.lib(rtx_timer.o)
    0x00001fd0   0x00001fd0   0x00000020   Code   RO         1637    .text.osRtxTimerThread  RTX_CM4F.lib(rtx_timer.o)
    0x00001ff0   0x00001ff0   0x00000070   Code   RO         1635    .text.osRtxTimerTick  RTX_CM4F.lib(rtx_timer.o)
    0x00002060   0x00002060   0x0000000c   Code   RO         1533    .text.osThreadExit  RTX_CM4F.lib(rtx_thread.o)
    0x0000206c   0x0000206c   0x00000024   Code   RO         1505    .text.osThreadNew   RTX_CM4F.lib(rtx_thread.o)
    0x00002090   0x00002090   0x000000a0   Code   RO           16    .text.printArray    main.o
    0x00002130   0x00002130   0x000000ac   Code   RO           18    .text.printFinalSorted  main.o
    0x000021dc   0x000021dc   0x00000010   Code   RO           14    .text.prompt        main.o
    0x000021ec   0x000021ec   0x00000164   Code   RO           26    .text.quickSort     main.o
    0x00002350   0x00002350   0x0000002c   Code   RO            8    .text.start_us      main.o
    0x0000237c   0x0000237c   0x00000042   Code   RO           10    .text.stop_us       main.o
    0x000023be   0x000023be   0x00000016   Code   RO         1621    .text.svcRtxDelay   RTX_CM4F.lib(rtx_delay.o)
    0x000023d4   0x000023d4   0x0000000c   Code   RO         1429    .text.svcRtxKernelGetTickCount  RTX_CM4F.lib(rtx_kernel.o)
    0x000023e0   0x000023e0   0x000000f8   Code   RO         1443    .text.svcRtxKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x000024d8   0x000024d8   0x00000088   Code   RO         1445    .text.svcRtxKernelStart  RTX_CM4F.lib(rtx_kernel.o)
    0x00002560   0x00002560   0x000000c8   Code   RO         1755    .text.svcRtxMessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x00002628   0x00002628   0x00000118   Code   RO         1713    .text.svcRtxMessageQueueNew  RTX_CM4F.lib(rtx_msgqueue.o)
    0x00002740   0x00002740   0x000000a8   Code   RO         1751    .text.svcRtxMessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x000027e8   0x000027e8   0x00000090   Code   RO         1695    .text.svcRtxMutexAcquire  RTX_CM4F.lib(rtx_mutex.o)
    0x00002878   0x00002878   0x00000064   Code   RO         1691    .text.svcRtxMutexNew  RTX_CM4F.lib(rtx_mutex.o)
    0x000028dc   0x000028dc   0x000000b0   Code   RO         1697    .text.svcRtxMutexRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x0000298c   0x0000298c   0x0000004c   Code   RO         1579    .text.svcRtxThreadExit  RTX_CM4F.lib(rtx_thread.o)
    0x000029d8   0x000029d8   0x000001ec   Code   RO         1503    .text.svcRtxThreadNew  RTX_CM4F.lib(rtx_thread.o)
    0x00002bc4   0x00002bc4   0x00000028   Code   RO          176    i.GPIODirModeSet    driverlib.lib(gpio.o)
    0x00002bec   0x00002bec   0x00000170   Code   RO          188    i.GPIOPadConfigSet  driverlib.lib(gpio.o)
    0x00002d5c   0x00002d5c   0x00000044   Code   RO          189    i.GPIOPinConfigure  driverlib.lib(gpio.o)
    0x00002da0   0x00002da0   0x0000001c   Code   RO          212    i.GPIOPinTypeUART   driverlib.lib(gpio.o)
    0x00002dbc   0x00002dbc   0x00000064   Code   RO         1790    i.IntEnable         driverlib.lib(interrupt.o)
    0x00002e20   0x00002e20   0x00000034   Code   RO         1802    i.IntRegister       driverlib.lib(interrupt.o)
    0x00002e54   0x00002e54   0x000002e4   Code   RO          511    i.SysCtlClockFreqSet  driverlib.lib(sysctl.o)
    0x00003138   0x00003138   0x00000028   Code   RO          543    i.SysCtlPeripheralEnable  driverlib.lib(sysctl.o)
    0x00003160   0x00003160   0x0000002c   Code   RO          547    i.SysCtlPeripheralReady  driverlib.lib(sysctl.o)
    0x0000318c   0x0000318c   0x00000060   Code   RO          867    i.TimerConfigure    driverlib.lib(timer.o)
    0x000031ec   0x000031ec   0x00000010   Code   RO          875    i.TimerDisable      driverlib.lib(timer.o)
    0x000031fc   0x000031fc   0x0000000e   Code   RO          876    i.TimerEnable       driverlib.lib(timer.o)
    0x0000320a   0x0000320a   0x00000012   Code   RO          885    i.TimerLoadSet      driverlib.lib(timer.o)
    0x0000321c   0x0000321c   0x0000000a   Code   RO          899    i.TimerValueGet     driverlib.lib(timer.o)
    0x00003226   0x00003226   0x0000000c   Code   RO         1111    i.UARTCharGet       driverlib.lib(uart.o)
    0x00003232   0x00003232   0x0000000c   Code   RO         1113    i.UARTCharPut       driverlib.lib(uart.o)
    0x0000323e   0x0000323e   0x0000000a   Code   RO         1115    i.UARTCharsAvail    driverlib.lib(uart.o)
    0x00003248   0x00003248   0x0000006e   Code   RO         1119    i.UARTConfigSetExpClk  driverlib.lib(uart.o)
    0x000032b6   0x000032b6   0x0000000a   Code   RO         1126    i.UARTFIFODisable   driverlib.lib(uart.o)
    0x000032c0   0x000032c0   0x00000004   Code   RO         1132    i.UARTIntClear      driverlib.lib(uart.o)
    0x000032c4   0x000032c4   0x00000008   Code   RO         1134    i.UARTIntEnable     driverlib.lib(uart.o)
    0x000032cc   0x000032cc   0x00000058   Code   RO         1135    i.UARTIntRegister   driverlib.lib(uart.o)
    0x00003324   0x00003324   0x0000000a   Code   RO         1136    i.UARTIntStatus     driverlib.lib(uart.o)
    0x0000332e   0x0000332e   0x00000002   PAD
    0x00003330   0x00003330   0x00000034   Code   RO         2022    i.__0snprintf       mc_w.l(printfa.o)
    0x00003364   0x00003364   0x00000034   Code   RO         2026    i.__0vsnprintf      mc_w.l(printfa.o)
    0x00003398   0x00003398   0x00000008   Code   RO         2112    i.__aeabi_errno_addr  mc_w.l(errno.o)
    0x000033a0   0x000033a0   0x0000000e   Code   RO         2144    i.__scatterload_copy  mc_w.l(handlers.o)
    0x000033ae   0x000033ae   0x00000002   Code   RO         2145    i.__scatterload_null  mc_w.l(handlers.o)
    0x000033b0   0x000033b0   0x0000000e   Code   RO         2146    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x000033be   0x000033be   0x00000002   PAD
    0x000033c0   0x000033c0   0x00000184   Code   RO         2028    i._fp_digits        mc_w.l(printfa.o)
    0x00003544   0x00003544   0x000006dc   Code   RO         2029    i._printf_core      mc_w.l(printfa.o)
    0x00003c20   0x00003c20   0x00000024   Code   RO         2030    i._printf_post_padding  mc_w.l(printfa.o)
    0x00003c44   0x00003c44   0x0000002e   Code   RO         2031    i._printf_pre_padding  mc_w.l(printfa.o)
    0x00003c72   0x00003c72   0x00000016   Code   RO         2032    i._snputc           mc_w.l(printfa.o)
    0x00003c88   0x00003c88   0x00000228   Data   RO          221    .constdata          driverlib.lib(gpio.o)
    0x00003eb0   0x00003eb0   0x00000254   Data   RO          565    .constdata          driverlib.lib(sysctl.o)
    0x00004104   0x00004104   0x00000080   Data   RO         1152    .constdata          driverlib.lib(uart.o)
    0x00004184   0x00004184   0x0000010c   Data   RO         1806    .constdata          driverlib.lib(interrupt.o)
    0x00004290   0x00004290   0x00000081   Data   RO         2085    .constdata          mc_w.l(ctype_o.o)
    0x00004311   0x00004311   0x00000003   PAD
    0x00004314   0x00004314   0x00000004   Data   RO         2086    .constdata          mc_w.l(ctype_o.o)
    0x00004318   0x00004318   0x00000070   Data   RO           69    .rodata             rtx_lib.o
    0x00004388   0x00004388   0x00000038   Data   RO           72    .rodata             rtx_lib.o
    0x000043c0   0x000043c0   0x00000018   Data   RO          142    .rodata.EventRecorderInfo  eventrecorder.o
    0x000043d8   0x000043d8   0x00000004   Data   RO           71    .rodata.osRtxUserSVC  rtx_lib.o
    0x000043dc   0x000043dc   0x00000024   Data   RO           66    .rodata.os_idle_thread_attr  rtx_lib.o
    0x00004400   0x00004400   0x00000018   Data   RO           68    .rodata.os_timer_mq_attr  rtx_lib.o
    0x00004418   0x00004418   0x00000024   Data   RO           67    .rodata.os_timer_thread_attr  rtx_lib.o
    0x0000443c   0x0000443c   0x00000091   Data   RO           42    .rodata.str1.1      main.o
    0x000044cd   0x000044cd   0x00000003   PAD
    0x000044d0   0x000044d0   0x0000000b   Data   RO         1463    .rodata.str1.4      RTX_CM4F.lib(rtx_kernel.o)
    0x000044db   0x000044db   0x00000001   PAD
    0x000044dc   0x000044dc   0x00000020   Data   RO         2143    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00004800, Size: 0x0000066c, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00000020])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000004   Data   RW         2012    .data               mc_w.l(rand.o)
    0x20000004   COMPRESSED   0x00000004   Data   RW         2115    .data               mc_w.l(errno.o)
    0x20000008   COMPRESSED   0x00000004   Data   RW          164    .data.SystemCoreClock  system_tm4c129.o
    0x2000000c   COMPRESSED   0x00000001   Data   RW           36    .data.bubbleDone    main.o
    0x2000000d   COMPRESSED   0x00000001   Data   RW           37    .data.insertionDone  main.o
    0x2000000e   COMPRESSED   0x00000002   PAD
    0x20000010   COMPRESSED   0x000000a4   Data   RW         1464    .data.os            RTX_CM4F.lib(rtx_kernel.o)
    0x200000b4   COMPRESSED   0x00000001   Data   RW           38    .data.quickDone     main.o
    0x200000b5   COMPRESSED   0x0000034b   PAD
    0x20000400   COMPRESSED   0x0000026c   Data   RW         1807    vtable              driverlib.lib(interrupt.o)


    Execution Region ER_ZI (Exec base: 0x20000680, Load base: 0x00004820, Size: 0x00008c88, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000680        -       0x00000004   Zero   RW           39    .bss.SysClock       main.o
    0x20000684        -       0x00000004   Zero   RW           34    .bss.bufferIndex    main.o
    0x20000688        -       0x00000064   Zero   RW           40    .bss.inputBuffer    main.o
    0x200006ec        -       0x00000001   Zero   RW           35    .bss.inputReady     main.o
    0x200006ed   0x00004820   0x00000013   PAD
    0x20000700        -       0x000004a4   Zero   RW          141    .bss.noinit         eventrecorder.o
    0x20000ba4   0x00004820   0x00000004   PAD
    0x20000ba8        -       0x00008040   Zero   RW           65    .bss.os             rtx_lib.o
    0x20008be8        -       0x00000001   Zero   RW         1998    .bss.os             RTX_CM4F.lib(os_systick.o)
    0x20008be9   0x00004820   0x00000003   PAD
    0x20008bec        -       0x00000034   Zero   RW           76    .bss.os.msgqueue.cb  rtx_lib.o
    0x20008c20        -       0x00000050   Zero   RW           77    .bss.os.msgqueue.mem  rtx_lib.o
    0x20008c70        -       0x00000088   Zero   RW           73    .bss.os.thread.cb   rtx_lib.o
    0x20008cf8        -       0x00000200   Zero   RW           74    .bss.os.thread.idle.stack  rtx_lib.o
    0x20008ef8        -       0x00000200   Zero   RW           75    .bss.os.thread.timer.stack  rtx_lib.o
    0x200090f8        -       0x00000004   Zero   RW           43    .bss.queueBubble    main.o
    0x200090fc        -       0x00000004   Zero   RW           44    .bss.queueInsert    main.o
    0x20009100        -       0x00000004   Zero   RW           45    .bss.queueQuick     main.o
    0x20009104        -       0x00000004   Zero   RW           41    .bss.uartMutex      main.o
    0x20009108        -       0x00000200   Zero   RW          150    STACK               startup_tm4c129.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0         24          0       1188       8107   eventrecorder.o
      2874          0        145          3        125       7980   main.o
        54          6          0          0          0        698   rtx_config.o
         0          0        268          0      34124       5567   rtx_lib.o
       276          8        512          0        512       6032   startup_tm4c129.o
        36          0          0          4          0       1382   system_tm4c129.o

    ----------------------------------------------------------------------
      3254         14        984        852      35972      29766   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        14          0          3        845         23          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       200         12          0          0          0        634   irq_armv7m.o
       114         20          0          0          1       3199   os_systick.o
        58          4          0          0          0       2797   rtx_delay.o
       540         36         11        164          0      16781   rtx_kernel.o
       228          0          0          0          0       2590   rtx_memory.o
       188          0          0          0          0      16188   rtx_mempool.o
      1328         24          0          0          0      18765   rtx_msgqueue.o
       672         16          0          0          0      10068   rtx_mutex.o
       368         18          0          0          0       5444   rtx_system.o
      1638         52          0          0          0      32486   rtx_thread.o
       248         16          0          0          0      10433   rtx_timer.o
       504         22        552          0          0       8073   gpio.o
       152         16        268        620          0       2150   interrupt.o
       824         48        596          0          0       4490   sysctl.o
       154          8          0          0          0       2613   timer.o
       264         18        128          0          0       5927   uart.o
        58          0          0          0          0          0   __dczerorl.o
        28          0          0          0          0         68   _chval.o
       158          0          0          0          0         92   _strtoul.o
         8          4        133          0          0         68   ctype_o.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
         8          4          0          4          0         68   errno.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        30          0          0          0          0         68   llshl.o
        36          0          0          0          0         68   llsshr.o
        32          0          0          0          0         68   llushr.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o
      2352         90          0          0          0        604   printfa.o
        36         10          0          4          0        136   rand.o
       114          0          0          0          0         92   strtoul.o
        44          0          0          0          0         80   uidiv.o
        98          0          0          0          0         92   uldiv.o
        48          0          0          0          0         68   cdrcmple.o
       334          0          0          0          0        148   dadd.o
       222          0          0          0          0        100   ddiv.o
       186          0          0          0          0        176   depilogue.o
        48          0          0          0          0         68   dfixul.o
       228          0          0          0          0         96   dmul.o

    ----------------------------------------------------------------------
     11730        436       1692        792          4     145042   Library Totals
        12          0          4          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      5582        198         11        164          1     119385   RTX_CM4F.lib
      1898        112       1544        620          0      23253   driverlib.lib
      3172        126        133          8          0       1748   mc_w.l
      1066          0          0          0          0        656   mf_w.l

    ----------------------------------------------------------------------
     11730        436       1692        792          4     145042   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     14984        450       2676       1644      35976     171856   Grand Totals
     14984        450       2676         32      35976     171856   ELF Image Totals (compressed)
     14984        450       2676         32          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                17660 (  17.25kB)
    Total RW  Size (RW Data + ZI Data)             37620 (  36.74kB)
    Total ROM Size (Code + RO Data + RW Data)      17692 (  17.28kB)

==============================================================================

